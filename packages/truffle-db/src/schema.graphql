scalar Address
scalar NetworkID
scalar TransactionHash
scalar Value
scalar Bytes
scalar Object
scalar ByteOffset
scalar FileIndex

type ContractInstance {
  address: Address!
  network: Network!
  callBytecode: Bytecode
  contract: Contract
  transactionHash: TransactionHash
  constructorArgs: [Value]
  linkValues: [LinkValue]
}

type ContractConstructor {
  createBytecode: Bytecode
}

type Contract {
  name: String
  abi: ABI
  compilation: Compilation
  sourceContract: SourceContract
  constructor: ContractConstructor
}

type ABI {
  json: String!
  items: [AbiItem]
}

# stub
type AbiItem {
  type: String
}

type SourceContract {
  name: String
  source: Source
  ast: AST
}

type AST {
  json: String!
}

type Network {
  name: String
  networkID: NetworkID
}

type LinkValue {
  linkReference: LinkReference!
  value: Bytes
}

type LinkReference {
  offsets: [ByteOffset!]!
  length: Int!
}

type Bytecode {
  bytes: Bytes!
  sourceMap: String,
  instructions: [Instruction!],
  linkReferences: [LinkReference]
}

type Instruction {
  opcode: String!,
  programCounter: Int!,
  meta: InstructionMeta,
  sourceRange: SourceRange,
  pushData: Bytes
}

type InstructionMeta {
  cost: Int!,
  dynamic: Boolean,

  # stack operations
  pops: Int,
  pushes: Int
}

type SourceRange {
  source: Source
  start: ByteOffset!
  length: Int!
  meta: SourceRangeMeta!
}

type Source {
  sourcePath: String
  contents: String!
  ast: AST
}

type Compilation {
  compiler: Compiler!
  sources: [Source]!
  contracts: [SourceContract]!
}

type Compiler {
  name: String
  version: String
  settings: Object
}

type SourceRangeMeta {
  jump: JumpDirection
}

enum JumpDirection {
  IN
  OUT
}
