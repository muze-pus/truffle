{
  "contractName": "PublicResolver",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "interfaceID",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "node",
          "type": "bytes32"
        },
        {
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "setDNSRecords",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "node",
          "type": "bytes32"
        },
        {
          "name": "key",
          "type": "string"
        },
        {
          "name": "value",
          "type": "string"
        }
      ],
      "name": "setText",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "node",
          "type": "bytes32"
        },
        {
          "name": "interfaceID",
          "type": "bytes4"
        }
      ],
      "name": "interfaceImplementer",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "node",
          "type": "bytes32"
        },
        {
          "name": "contentTypes",
          "type": "uint256"
        }
      ],
      "name": "ABI",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "bytes"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "node",
          "type": "bytes32"
        },
        {
          "name": "x",
          "type": "bytes32"
        },
        {
          "name": "y",
          "type": "bytes32"
        }
      ],
      "name": "setPubkey",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "node",
          "type": "bytes32"
        },
        {
          "name": "hash",
          "type": "bytes"
        }
      ],
      "name": "setContenthash",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "node",
          "type": "bytes32"
        }
      ],
      "name": "addr",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "node",
          "type": "bytes32"
        },
        {
          "name": "name",
          "type": "bytes32"
        }
      ],
      "name": "hasDNSRecords",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "node",
          "type": "bytes32"
        },
        {
          "name": "key",
          "type": "string"
        }
      ],
      "name": "text",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "node",
          "type": "bytes32"
        },
        {
          "name": "contentType",
          "type": "uint256"
        },
        {
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "setABI",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "node",
          "type": "bytes32"
        }
      ],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "node",
          "type": "bytes32"
        },
        {
          "name": "name",
          "type": "string"
        }
      ],
      "name": "setName",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "node",
          "type": "bytes32"
        },
        {
          "name": "name",
          "type": "bytes32"
        },
        {
          "name": "resource",
          "type": "uint16"
        }
      ],
      "name": "dnsRecord",
      "outputs": [
        {
          "name": "",
          "type": "bytes"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "node",
          "type": "bytes32"
        }
      ],
      "name": "clearDNSZone",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "node",
          "type": "bytes32"
        }
      ],
      "name": "contenthash",
      "outputs": [
        {
          "name": "",
          "type": "bytes"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "node",
          "type": "bytes32"
        }
      ],
      "name": "pubkey",
      "outputs": [
        {
          "name": "x",
          "type": "bytes32"
        },
        {
          "name": "y",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "node",
          "type": "bytes32"
        },
        {
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "setAddr",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "node",
          "type": "bytes32"
        },
        {
          "name": "interfaceID",
          "type": "bytes4"
        },
        {
          "name": "implementer",
          "type": "address"
        }
      ],
      "name": "setInterface",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "bytes32"
        },
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "authorisations",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_ens",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "node",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "target",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "isAuthorised",
          "type": "bool"
        }
      ],
      "name": "AuthorisationChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "node",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "name": "indexedKey",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "key",
          "type": "string"
        }
      ],
      "name": "TextChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "node",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "x",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "y",
          "type": "bytes32"
        }
      ],
      "name": "PubkeyChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "node",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "name",
          "type": "string"
        }
      ],
      "name": "NameChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "node",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "name": "interfaceID",
          "type": "bytes4"
        },
        {
          "indexed": false,
          "name": "implementer",
          "type": "address"
        }
      ],
      "name": "InterfaceChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "node",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "name",
          "type": "bytes"
        },
        {
          "indexed": false,
          "name": "resource",
          "type": "uint16"
        },
        {
          "indexed": false,
          "name": "record",
          "type": "bytes"
        }
      ],
      "name": "DNSRecordChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "node",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "name",
          "type": "bytes"
        },
        {
          "indexed": false,
          "name": "resource",
          "type": "uint16"
        }
      ],
      "name": "DNSRecordDeleted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "node",
          "type": "bytes32"
        }
      ],
      "name": "DNSZoneCleared",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "node",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "hash",
          "type": "bytes"
        }
      ],
      "name": "ContenthashChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "node",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "a",
          "type": "address"
        }
      ],
      "name": "AddrChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "node",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "name": "contentType",
          "type": "uint256"
        }
      ],
      "name": "ABIChanged",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "node",
          "type": "bytes32"
        },
        {
          "name": "target",
          "type": "address"
        },
        {
          "name": "isAuthorised",
          "type": "bool"
        }
      ],
      "name": "setAuthorisation",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"node\",\"type\":\"bytes32\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"setDNSRecords\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"node\",\"type\":\"bytes32\"},{\"name\":\"key\",\"type\":\"string\"},{\"name\":\"value\",\"type\":\"string\"}],\"name\":\"setText\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"node\",\"type\":\"bytes32\"},{\"name\":\"interfaceID\",\"type\":\"bytes4\"}],\"name\":\"interfaceImplementer\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"node\",\"type\":\"bytes32\"},{\"name\":\"contentTypes\",\"type\":\"uint256\"}],\"name\":\"ABI\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"node\",\"type\":\"bytes32\"},{\"name\":\"x\",\"type\":\"bytes32\"},{\"name\":\"y\",\"type\":\"bytes32\"}],\"name\":\"setPubkey\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"node\",\"type\":\"bytes32\"},{\"name\":\"hash\",\"type\":\"bytes\"}],\"name\":\"setContenthash\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"node\",\"type\":\"bytes32\"}],\"name\":\"addr\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"node\",\"type\":\"bytes32\"},{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"isAuthorised\",\"type\":\"bool\"}],\"name\":\"setAuthorisation\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"node\",\"type\":\"bytes32\"},{\"name\":\"name\",\"type\":\"bytes32\"}],\"name\":\"hasDNSRecords\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"node\",\"type\":\"bytes32\"},{\"name\":\"key\",\"type\":\"string\"}],\"name\":\"text\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"node\",\"type\":\"bytes32\"},{\"name\":\"contentType\",\"type\":\"uint256\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"setABI\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"node\",\"type\":\"bytes32\"}],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"node\",\"type\":\"bytes32\"},{\"name\":\"name\",\"type\":\"string\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"node\",\"type\":\"bytes32\"},{\"name\":\"name\",\"type\":\"bytes32\"},{\"name\":\"resource\",\"type\":\"uint16\"}],\"name\":\"dnsRecord\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"node\",\"type\":\"bytes32\"}],\"name\":\"clearDNSZone\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"node\",\"type\":\"bytes32\"}],\"name\":\"contenthash\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"node\",\"type\":\"bytes32\"}],\"name\":\"pubkey\",\"outputs\":[{\"name\":\"x\",\"type\":\"bytes32\"},{\"name\":\"y\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"node\",\"type\":\"bytes32\"},{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"setAddr\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"node\",\"type\":\"bytes32\"},{\"name\":\"interfaceID\",\"type\":\"bytes4\"},{\"name\":\"implementer\",\"type\":\"address\"}],\"name\":\"setInterface\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"},{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"authorisations\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_ens\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"isAuthorised\",\"type\":\"bool\"}],\"name\":\"AuthorisationChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"indexedKey\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"key\",\"type\":\"string\"}],\"name\":\"TextChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"x\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"y\",\"type\":\"bytes32\"}],\"name\":\"PubkeyChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"name\",\"type\":\"string\"}],\"name\":\"NameChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"interfaceID\",\"type\":\"bytes4\"},{\"indexed\":false,\"name\":\"implementer\",\"type\":\"address\"}],\"name\":\"InterfaceChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"name\",\"type\":\"bytes\"},{\"indexed\":false,\"name\":\"resource\",\"type\":\"uint16\"},{\"indexed\":false,\"name\":\"record\",\"type\":\"bytes\"}],\"name\":\"DNSRecordChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"name\",\"type\":\"bytes\"},{\"indexed\":false,\"name\":\"resource\",\"type\":\"uint16\"}],\"name\":\"DNSRecordDeleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"node\",\"type\":\"bytes32\"}],\"name\":\"DNSZoneCleared\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"hash\",\"type\":\"bytes\"}],\"name\":\"ContenthashChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"a\",\"type\":\"address\"}],\"name\":\"AddrChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"contentType\",\"type\":\"uint256\"}],\"name\":\"ABIChanged\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"ABI(bytes32,uint256)\":{\"params\":{\"contentTypes\":\"A bitwise OR of the ABI formats accepted by the caller.\",\"node\":\"The ENS node to query\"},\"return\":\"contentType The content type of the return valuedata The ABI data\"},\"addr(bytes32)\":{\"params\":{\"node\":\"The ENS node to query.\"},\"return\":\"The associated address.\"},\"clearDNSZone(bytes32)\":{\"params\":{\"node\":\"the namehash of the node for which to clear the zone\"}},\"contenthash(bytes32)\":{\"params\":{\"node\":\"The ENS node to query.\"},\"return\":\"The associated contenthash.\"},\"dnsRecord(bytes32,bytes32,uint16)\":{\"params\":{\"name\":\"the keccak-256 hash of the fully-qualified name for which to fetch the record\",\"node\":\"the namehash of the node for which to fetch the record\",\"resource\":\"the ID of the resource as per https://en.wikipedia.org/wiki/List_of_DNS_record_types\"},\"return\":\"the DNS record in wire format if present, otherwise empty\"},\"hasDNSRecords(bytes32,bytes32)\":{\"params\":{\"name\":\"the namehash of the node for which to check the records\",\"node\":\"the namehash of the node for which to check the records\"}},\"interfaceImplementer(bytes32,bytes4)\":{\"params\":{\"interfaceID\":\"The EIP 168 interface ID to check for.\",\"node\":\"The ENS node to query.\"},\"return\":\"The address that implements this interface, or 0 if the interface is unsupported.\"},\"name(bytes32)\":{\"params\":{\"node\":\"The ENS node to query.\"},\"return\":\"The associated name.\"},\"pubkey(bytes32)\":{\"params\":{\"node\":\"The ENS node to query\"},\"return\":\"x, y the X and Y coordinates of the curve point for the public key.\"},\"setABI(bytes32,uint256,bytes)\":{\"params\":{\"contentType\":\"The content type of the ABI\",\"data\":\"The ABI data.\",\"node\":\"The node to update.\"}},\"setAddr(bytes32,address)\":{\"params\":{\"addr\":\"The address to set.\",\"node\":\"The node to update.\"}},\"setAuthorisation(bytes32,address,bool)\":{\"details\":\"Sets or clears an authorisation. Authorisations are specific to the caller. Any account can set an authorisation for any name, but the authorisation that is checked will be that of the current owner of a name. Thus, transferring a name effectively clears any existing authorisations, and new authorisations can be set in advance of an ownership transfer if desired.\",\"params\":{\"isAuthorised\":\"True if the address should be authorised, or false if it should be deauthorised.\",\"node\":\"The name to change the authorisation on.\",\"target\":\"The address that is to be authorised or deauthorised.\"}},\"setContenthash(bytes32,bytes)\":{\"params\":{\"hash\":\"The contenthash to set\",\"node\":\"The node to update.\"}},\"setDNSRecords(bytes32,bytes)\":{\"params\":{\"data\":\"the DNS wire format records to set\",\"node\":\"the namehash of the node for which to set the records\"}},\"setInterface(bytes32,bytes4,address)\":{\"params\":{\"implementer\":\"The address of a contract that implements this interface for this node.\",\"interfaceID\":\"The EIP 168 interface ID.\",\"node\":\"The node to update.\"}},\"setName(bytes32,string)\":{\"params\":{\"name\":\"The name to set.\",\"node\":\"The node to update.\"}},\"setPubkey(bytes32,bytes32,bytes32)\":{\"params\":{\"node\":\"The ENS node to query\",\"x\":\"the X coordinate of the curve point for the public key.\",\"y\":\"the Y coordinate of the curve point for the public key.\"}},\"setText(bytes32,string,string)\":{\"params\":{\"key\":\"The key to set.\",\"node\":\"The node to update.\",\"value\":\"The text data value to set.\"}},\"text(bytes32,string)\":{\"params\":{\"key\":\"The text data key to query.\",\"node\":\"The ENS node to query.\"},\"return\":\"The associated text data.\"}}},\"userdoc\":{\"methods\":{\"ABI(bytes32,uint256)\":{\"notice\":\"Returns the ABI associated with an ENS node. Defined in EIP205.\"},\"addr(bytes32)\":{\"notice\":\"Returns the address associated with an ENS node.\"},\"clearDNSZone(bytes32)\":{\"notice\":\"Clear all information for a DNS zone.\"},\"contenthash(bytes32)\":{\"notice\":\"Returns the contenthash associated with an ENS node.\"},\"dnsRecord(bytes32,bytes32,uint16)\":{\"notice\":\"Obtain a DNS record.\"},\"hasDNSRecords(bytes32,bytes32)\":{\"notice\":\"Check if a given node has records.\"},\"interfaceImplementer(bytes32,bytes4)\":{\"notice\":\"Returns the address of a contract that implements the specified interface for this name. If an implementer has not been set for this interfaceID and name, the resolver will query the contract at `addr()`. If `addr()` is set, a contract exists at that address, and that contract implements EIP168 and returns `true` for the specified interfaceID, its address will be returned.\"},\"name(bytes32)\":{\"notice\":\"Returns the name associated with an ENS node, for reverse records. Defined in EIP181.\"},\"pubkey(bytes32)\":{\"notice\":\"Returns the SECP256k1 public key associated with an ENS node. Defined in EIP 619.\"},\"setABI(bytes32,uint256,bytes)\":{\"notice\":\"Sets the ABI associated with an ENS node. Nodes may have one ABI of each content type. To remove an ABI, set it to the empty string.\"},\"setAddr(bytes32,address)\":{\"notice\":\"Sets the address associated with an ENS node. May only be called by the owner of that node in the ENS registry.\"},\"setContenthash(bytes32,bytes)\":{\"notice\":\"Sets the contenthash associated with an ENS node. May only be called by the owner of that node in the ENS registry.\"},\"setDNSRecords(bytes32,bytes)\":{\"notice\":\"Set one or more DNS records.  Records are supplied in wire-format. Records with the same node/name/resource must be supplied one after the other to ensure the data is updated correctly. For example, if the data was supplied:    a.example.com IN A 1.2.3.4    a.example.com IN A 5.6.7.8    www.example.com IN CNAME a.example.com. then this would store the two A records for a.example.com correctly as a single RRSET, however if the data was supplied:    a.example.com IN A 1.2.3.4    www.example.com IN CNAME a.example.com.    a.example.com IN A 5.6.7.8 then this would store the first A record, the CNAME, then the second A record which would overwrite the first.\"},\"setInterface(bytes32,bytes4,address)\":{\"notice\":\"Sets an interface associated with a name. Setting the address to 0 restores the default behaviour of querying the contract at `addr()` for interface support.\"},\"setName(bytes32,string)\":{\"notice\":\"Sets the name associated with an ENS node, for reverse records. May only be called by the owner of that node in the ENS registry.\"},\"setPubkey(bytes32,bytes32,bytes32)\":{\"notice\":\"Sets the SECP256k1 public key associated with an ENS node.\"},\"setText(bytes32,string,string)\":{\"notice\":\"Sets the text data associated with an ENS node and key. May only be called by the owner of that node in the ENS registry.\"},\"text(bytes32,string)\":{\"notice\":\"Returns the text data associated with an ENS node and key.\"}},\"notice\":\"A simple resolver anyone can use; only allows the owner of a node to set its address.\"}},\"settings\":{\"compilationTarget\":{\"/Users/tyler/projects/truffle/packages/truffle-deployer/test/sources/init/contracts/PublicResolver.sol\":\"PublicResolver\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/tyler/projects/truffle/packages/truffle-deployer/test/sources/init/contracts/Buffer.sol\":{\"keccak256\":\"0x1264adbd06f6e05b04539bb225063a988b7fa90343d068de60cdde6cfb6fa92d\",\"urls\":[\"bzzr://8f1cb39e242b73bb7fac1f48bf0380ccccad14f06aae9cf4f87329cc78186122\"]},\"/Users/tyler/projects/truffle/packages/truffle-deployer/test/sources/init/contracts/BytesUtils.sol\":{\"keccak256\":\"0x4014e689ef4a36cbf7103d88286abd2a7c560c2a7af99a561c33c61bc78be27a\",\"urls\":[\"bzzr://adf984996598f1e0d446eea1eda14ed2c49ab86a4ea1ae837cf4f9d99556b9c2\"]},\"/Users/tyler/projects/truffle/packages/truffle-deployer/test/sources/init/contracts/ENS.sol\":{\"keccak256\":\"0xe688db01c0b974f8ff8565557f7fe81aa1f209c1497ec1e74536241f4cc11f08\",\"urls\":[\"bzzr://04aa083550728a1da54d9acf874f4fca77cc3afef81c57f1ec19be78af05019a\"]},\"/Users/tyler/projects/truffle/packages/truffle-deployer/test/sources/init/contracts/PublicResolver.sol\":{\"keccak256\":\"0xbf1d3ed07f6298d5999e404d444ef6e5f4f48839dffe9a984b8eb54459440465\",\"urls\":[\"bzzr://24bd4768ccf71d0601889615e22befb1c4ddf2ed05b5a0d85686581d5115b0d8\"]},\"/Users/tyler/projects/truffle/packages/truffle-deployer/test/sources/init/contracts/RRUtils.sol\":{\"keccak256\":\"0x270b635b21a51833416d625fa3d70b56b9f315c9ac9c6a77e1697c1faec2a588\",\"urls\":[\"bzzr://9274b198d8c26b89ba13178d47718a6dea5063fcb8f106bff9a5d255d894f7b2\"]},\"/Users/tyler/projects/truffle/packages/truffle-deployer/test/sources/init/contracts/ResolverBase.sol\":{\"keccak256\":\"0x1edb0133a2a5a68aebe3a6d766b19238aeb2a067bfe4efb94c9885531928fb18\",\"urls\":[\"bzzr://0f9c7f5b33e44d95c81a2bc4d7f109dbd8533b9146d7af799f73915fc478e062\"]},\"/Users/tyler/projects/truffle/packages/truffle-deployer/test/sources/init/contracts/profiles/ABIResolver.sol\":{\"keccak256\":\"0xe3f7f80957307e2cf01578b9b7a06e1a31eaf5cf101bc456526b04c56868ab00\",\"urls\":[\"bzzr://1c6995a72c72a05a31c53ce39f8d856dfa29437c02378e1231766165e2e7728d\"]},\"/Users/tyler/projects/truffle/packages/truffle-deployer/test/sources/init/contracts/profiles/AddrResolver.sol\":{\"keccak256\":\"0x1be727d5b7f5ca2dd000aeddad31c68c8c8782c64a7f5056ec34637919c3dfa9\",\"urls\":[\"bzzr://fd00b0525f2107fb24ab6313a396596e87f4b6b36beda17a01fe873631f2e1cd\"]},\"/Users/tyler/projects/truffle/packages/truffle-deployer/test/sources/init/contracts/profiles/ContentHashResolver.sol\":{\"keccak256\":\"0x266c8bdd6495aa01e2427c771e7129c7cb733b374d1fa3ee9aee894efea8f6a7\",\"urls\":[\"bzzr://e68c12574e4c2de471f27398f0fe4f705658a45f66600396a8be2155580941a7\"]},\"/Users/tyler/projects/truffle/packages/truffle-deployer/test/sources/init/contracts/profiles/DNSResolver.sol\":{\"keccak256\":\"0xdcf68fdb1d02bce443f30f1ee6aeda2b174c87b7ca296a91cfe020f1b7249e98\",\"urls\":[\"bzzr://b162950ac2792ccf1988fa37380ebcdb3857677830d2222c6e3dce83b8c98b09\"]},\"/Users/tyler/projects/truffle/packages/truffle-deployer/test/sources/init/contracts/profiles/InterfaceResolver.sol\":{\"keccak256\":\"0x028810d27c5f11c36beb2cc8510fce620b5b8ec2e74ab9163793c675422ecd71\",\"urls\":[\"bzzr://c7fbb3253c2be5498c907884f18f2f6153759ae3498de941cb9d4e9bbd33291e\"]},\"/Users/tyler/projects/truffle/packages/truffle-deployer/test/sources/init/contracts/profiles/NameResolver.sol\":{\"keccak256\":\"0x540740fdbe9f0fb529d1163f9df50256bd734776ecf485bda95d4162983d3959\",\"urls\":[\"bzzr://93ba2d2755c82dab082274605d3e60ec7fcf4109240a4a96f62d00aea3747539\"]},\"/Users/tyler/projects/truffle/packages/truffle-deployer/test/sources/init/contracts/profiles/PubkeyResolver.sol\":{\"keccak256\":\"0xd4fd2fba924cd1661e455fac86747837245bf533e1e9c9af05c0f530b2f8f991\",\"urls\":[\"bzzr://e41c89dfa3bd18da01f13ddc18d88463bc39b7902bcee885319757d9a3ec3734\"]},\"/Users/tyler/projects/truffle/packages/truffle-deployer/test/sources/init/contracts/profiles/TextResolver.sol\":{\"keccak256\":\"0xe3335d1204f49f491928646b239978b8c51ca81c6f331f6a36f85c4a9210565d\",\"urls\":[\"bzzr://7ddd8c825ca8eb142be1b88970077442a218f3d164b12eb079a632500efb6942\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516020806130438339810180604052602081101561003057600080fd5b810190808051906020019092919050505080600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050612fb1806100926000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c806359d1d43c116100b8578063ad5780af1161007c578063ad5780af1461099a578063bc1c58d1146109c8578063c869023314610a6f578063d5fa2b0014610ab8578063e59d895d14610b06578063f86bc87914610b7d57610137565b806359d1d43c14610628578063623195b014610724578063691f3431146107b15780637737221314610858578063a8fa5682146108db57610137565b806329cd62ea116100ff57806329cd62ea1461044b578063304e6ade1461048d5780633b3b57de146105105780633e9ce7941461057e5780634cbf6ba4146105d857610137565b806301ffc9a71461013c5780630af179d7146101a157806310f13a8c14610224578063124a319c146102fc5780632203ab5614610393575b600080fd5b6101876004803603602081101561015257600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610c03565b604051808215151515815260200191505060405180910390f35b610222600480360360408110156101b757600080fd5b8101908080359060200190929190803590602001906401000000008111156101de57600080fd5b8201836020820111156101f057600080fd5b8035906020019184600183028401116401000000008311171561021257600080fd5b9091929391929390505050610c64565b005b6102fa6004803603606081101561023a57600080fd5b81019080803590602001909291908035906020019064010000000081111561026157600080fd5b82018360208201111561027357600080fd5b8035906020019184600183028401116401000000008311171561029557600080fd5b9091929391929390803590602001906401000000008111156102b657600080fd5b8201836020820111156102c857600080fd5b803590602001918460018302840111640100000000831117156102ea57600080fd5b9091929391929390505050610edd565b005b6103516004803603604081101561031257600080fd5b810190808035906020019092919080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610fc3565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103c9600480360360408110156103a957600080fd5b8101908080359060200190929190803590602001909291905050506114c0565b6040518083815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561040f5780820151818401526020810190506103f4565b50505050905090810190601f16801561043c5780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b61048b6004803603606081101561046157600080fd5b8101908080359060200190929190803590602001909291908035906020019092919050505061160f565b005b61050e600480360360408110156104a357600080fd5b8101908080359060200190929190803590602001906401000000008111156104ca57600080fd5b8201836020820111156104dc57600080fd5b803590602001918460018302840111640100000000831117156104fe57600080fd5b90919293919293905050506116a7565b005b61053c6004803603602081101561052657600080fd5b8101908080359060200190929190505050611747565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6105d66004803603606081101561059457600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050611784565b005b61060e600480360360408110156105ee57600080fd5b810190808035906020019092919080359060200190929190505050611898565b604051808215151515815260200191505060405180910390f35b6106a96004803603604081101561063e57600080fd5b81019080803590602001909291908035906020019064010000000081111561066557600080fd5b82018360208201111561067757600080fd5b8035906020019184600183028401116401000000008311171561069957600080fd5b9091929391929390505050611900565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156106e95780820151818401526020810190506106ce565b50505050905090810190601f1680156107165780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6107af6004803603606081101561073a57600080fd5b8101908080359060200190929190803590602001909291908035906020019064010000000081111561076b57600080fd5b82018360208201111561077d57600080fd5b8035906020019184600183028401116401000000008311171561079f57600080fd5b90919293919293905050506119dc565b005b6107dd600480360360208110156107c757600080fd5b8101908080359060200190929190505050611a69565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561081d578082015181840152602081019050610802565b50505050905090810190601f16801561084a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6108d96004803603604081101561086e57600080fd5b81019080803590602001909291908035906020019064010000000081111561089557600080fd5b8201836020820111156108a757600080fd5b803590602001918460018302840111640100000000831117156108c957600080fd5b9091929391929390505050611b1e565b005b61091f600480360360608110156108f157600080fd5b810190808035906020019092919080359060200190929190803561ffff169060200190929190505050611bbe565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561095f578082015181840152602081019050610944565b50505050905090810190601f16801561098c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6109c6600480360360208110156109b057600080fd5b8101908080359060200190929190505050611cc3565b005b6109f4600480360360208110156109de57600080fd5b8101908080359060200190929190505050611d2a565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610a34578082015181840152602081019050610a19565b50505050905090810190601f168015610a615780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610a9b60048036036020811015610a8557600080fd5b8101908080359060200190929190505050611ddf565b604051808381526020018281526020019250505060405180910390f35b610b0460048036036040811015610ace57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611e19565b005b610b7b60048036036060811015610b1c57600080fd5b810190808035906020019092919080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611ee7565b005b610be960048036036060811015610b9357600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612025565b604051808215151515815260200191505060405180910390f35b60006359d1d43c60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610c5d5750610c5c82612061565b5b9050919050565b82610c6e816120c2565b610c7757600080fd5b600080905060008090506060806000610c8e612d29565b610ce660008a8a8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505061224e90919063ffffffff16565b90505b610cf281612278565b610e6a5760008661ffff161415610d995780604001519550610d138161228e565b9350836040516020018082805190602001908083835b60208310610d4c5780518252602082019150602081019050602083039250610d29565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052805190602001209150610d92816122c5565b9250610e5c565b6060610da48261228e565b9050816040015161ffff168761ffff16141580610dd15750610dcf81866122f590919063ffffffff16565b155b15610e5a57610e338b86898d8d8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050508a8b88602001510360008b511461231c565b816040015196508160200151955080945084805190602001209250610e57826122c5565b93505b505b610e658161279d565b610ce9565b50600083511115610ed257610ed18984878b8b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505088898e8e905003600089511461231c565b5b505050505050505050565b84610ee7816120c2565b610ef057600080fd5b828260096000898152602001908152602001600020878760405180838380828437808301925050509250505090815260200160405180910390209190610f37929190612d74565b5084846040518083838082843780830192505050925050506040518091039020867fd8c9334b1a9c2f9da342a0a2b32629c1a229b6445dad78947f674b44444a7550878760405180806020018281038252848482818152602001925080828437600081840152601f19601f820116905080830192505050935050505060405180910390a3505050505050565b600080600660008581526020019081526020016000206000847bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461108857809150506114ba565b600061109385611747565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156110d5576000925050506114ba565b600060608273ffffffffffffffffffffffffffffffffffffffff166301ffc9a760e01b60405160240180827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019150506040516020818303038152906040527f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518082805190602001908083835b602083106111f657805182526020820191506020810190506020830392506111d3565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114611256576040519150601f19603f3d011682016040523d82523d6000602084013e61125b565b606091505b509150915081158061126e575060208151105b806112b55750600060f81b81601f8151811061128657fe5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b156112c75760009450505050506114ba565b8273ffffffffffffffffffffffffffffffffffffffff168660405160240180827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019150506040516020818303038152906040527f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518082805190602001908083835b602083106113dd57805182526020820191506020810190506020830392506113ba565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d806000811461143d576040519150601f19603f3d011682016040523d82523d6000602084013e611442565b606091505b508092508193505050811580611459575060208151105b806114a05750600060f81b81601f8151811061147157fe5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b156114b25760009450505050506114ba565b829450505050505b92915050565b60006060600080600086815260200190815260200160002090506000600190505b8481116115ec5760008582161415801561152157506000826000838152602001908152602001600020805460018160011615610100020316600290049050115b156115e05780826000838152602001908152602001600020808054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156115ce5780601f106115a3576101008083540402835291602001916115ce565b820191906000526020600020905b8154815290600101906020018083116115b157829003601f168201915b50505050509050935093505050611608565b600181901b90506114e1565b5060006040518060200160405280600081525081915092509250505b9250929050565b82611619816120c2565b61162257600080fd5b604051806040016040528084815260200183815250600860008681526020019081526020016000206000820151816000015560208201518160010155905050837f1d6f5e03d3f63eb58751986629a5439baee5079ff04f345becb66e23eb154e468484604051808381526020018281526020019250505060405180910390a250505050565b826116b1816120c2565b6116ba57600080fd5b82826002600087815260200190815260200160002091906116dc929190612df4565b50837fe379c1624ed7e714cc0937528a32359d69d5281337765313dba4e081b72d7578848460405180806020018281038252848482818152602001925080828437600081840152601f19601f820116905080830192505050935050505060405180910390a250505050565b60006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b80600b600085815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16847fe1c5610a6e0cbe10764ecd182adcef1ec338dc4e199c99c32ce98f38e12791df84604051808215151515815260200191505060405180910390a4505050565b60008060056000858152602001908152602001600020600060036000878152602001908152602001600020548152602001908152602001600020600084815260200190815260200160002060009054906101000a900461ffff1661ffff161415905092915050565b606060096000858152602001908152602001600020838360405180838380828437808301925050509250505090815260200160405180910390208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156119ce5780601f106119a3576101008083540402835291602001916119ce565b820191906000526020600020905b8154815290600101906020018083116119b157829003601f168201915b505050505090509392505050565b836119e6816120c2565b6119ef57600080fd5b600084600186031614611a0157600080fd5b828260008088815260200190815260200160002060008781526020019081526020016000209190611a33929190612df4565b5083857faa121bbeef5f32f5961a2a28966e769023910fc9479059ee3495d4c1a696efe360405160405180910390a35050505050565b6060600760008381526020019081526020016000208054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611b125780601f10611ae757610100808354040283529160200191611b12565b820191906000526020600020905b815481529060010190602001808311611af557829003601f168201915b50505050509050919050565b82611b28816120c2565b611b3157600080fd5b8282600760008781526020019081526020016000209190611b53929190612d74565b50837fb7d29e911041e8d9b843369e890bcb72c9388692ba48b65ac54e7214c4c348f7848460405180806020018281038252848482818152602001925080828437600081840152601f19601f820116905080830192505050935050505060405180910390a250505050565b606060046000858152602001908152602001600020600060036000878152602001908152602001600020548152602001908152602001600020600084815260200190815260200160002060008361ffff1661ffff1681526020019081526020016000208054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611cb55780601f10611c8a57610100808354040283529160200191611cb5565b820191906000526020600020905b815481529060010190602001808311611c9857829003601f168201915b505050505090509392505050565b80611ccd816120c2565b611cd657600080fd5b6003600083815260200190815260200160002060008154809291906001019190505550817fb757169b8492ca2f1c6619d9d76ce22803035c3b1d5f6930dffe7b127c1a198360405160405180910390a25050565b6060600260008381526020019081526020016000208054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611dd35780601f10611da857610100808354040283529160200191611dd3565b820191906000526020600020905b815481529060010190602001808311611db657829003601f168201915b50505050509050919050565b6000806008600084815260200190815260200160002060000154600860008581526020019081526020016000206001015491509150915091565b81611e23816120c2565b611e2c57600080fd5b816001600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550827f52d7d861f09ab3d26239d492e8968629f95e9e318cf0b73bfddc441522a15fd283604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a2505050565b82611ef1816120c2565b611efa57600080fd5b81600660008681526020019081526020016000206000857bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916847f7c69f06bea0bdef565b709e93a147836b0063ba2dd89f02d0b7e8d931e6a6daa84604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a350505050565b600b602052826000526040600020602052816000526040600020602052806000526040600020600092509250509054906101000a900460ff1681565b600063c869023360e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806120bb57506120ba826128b1565b5b9050919050565b600080600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166302571be3846040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561213857600080fd5b505afa15801561214c573d6000803e3d6000fd5b505050506040513d602081101561216257600080fd5b810190808051906020019092919050505090503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614806122465750600b600084815260200190815260200160002060008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b915050919050565b612256612d29565b828160000181905250818160c00181815250506122728161279d565b92915050565b6000816000015151826020015110159050919050565b60606122be82602001516122aa84600001518560200151612912565b846000015161296d9092919063ffffffff16565b9050919050565b60606122ee8260a001518360a001518460c0015103846000015161296d9092919063ffffffff16565b9050919050565b600081518351148015612314575061231383600084600087516129e0565b5b905092915050565b600060036000898152602001908152602001600020549050600087805190602001209050606061235786868961296d9092919063ffffffff16565b9050831561253f576000600460008c81526020019081526020016000206000858152602001908152602001600020600084815260200190815260200160002060008a61ffff1661ffff1681526020019081526020016000208054600181600116156101000203166002900490501461243357600560008b815260200190815260200160002060008481526020019081526020016000206000838152602001908152602001600020600081819054906101000a900461ffff16809291906001900391906101000a81548161ffff021916908361ffff160217905550505b600460008b81526020019081526020016000206000848152602001908152602001600020600083815260200190815260200160002060008961ffff1661ffff168152602001908152602001600020600061248d9190612e74565b897f03528ed0c2a3ebc993b12ce3c16bb382f9c7d88ef7d8a1bf290eaf35955a12078a8a60405180806020018361ffff1661ffff168152602001828103825284818151815260200191508051906020019080838360005b838110156124ff5780820151818401526020810190506124e4565b50505050905090810190601f16801561252c5780820380516001836020036101000a031916815260200191505b50935050505060405180910390a2612791565b6000600460008c81526020019081526020016000206000858152602001908152602001600020600084815260200190815260200160002060008a61ffff1661ffff168152602001908152602001600020805460018160011615610100020316600290049050141561261357600560008b815260200190815260200160002060008481526020019081526020016000206000838152602001908152602001600020600081819054906101000a900461ffff168092919060010191906101000a81548161ffff021916908361ffff160217905550505b80600460008c81526020019081526020016000206000858152602001908152602001600020600084815260200190815260200160002060008a61ffff1661ffff1681526020019081526020016000209080519060200190612675929190612ebc565b50897f52a608b3303a48862d07a73d82fa221318c0027fbbcfb1b2329bface3f19ff2b8a8a8460405180806020018461ffff1661ffff16815260200180602001838103835286818151815260200191508051906020019080838360005b838110156126ed5780820151818401526020810190506126d2565b50505050905090810190601f16801561271a5780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b83811015612753578082015181840152602081019050612738565b50505050905090810190601f1680156127805780820380516001836020036101000a031916815260200191505b509550505050505060405180910390a25b50505050505050505050565b8060c001518160200181815250508060000151518160200151106127c0576128ae565b60006127d482600001518360200151612912565b82602001510190506127f3818360000151612a0490919063ffffffff16565b826040019061ffff16908161ffff1681525050600281019050612823818360000151612a0490919063ffffffff16565b826060019061ffff16908161ffff1681525050600281019050612853818360000151612a2a90919063ffffffff16565b826080019063ffffffff16908163ffffffff16815250506004810190506000612889828460000151612a0490919063ffffffff16565b61ffff169050600282019150818360a00181815250508082018360c001818152505050505b50565b600063691f343160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061290b575061290a82612a52565b5b9050919050565b6000808290505b600115612961578351811061292a57fe5b600061293f8286612ac490919063ffffffff16565b60ff1690506001810182019150600081141561295b5750612961565b50612919565b82810391505092915050565b60608351828401111561297f57600080fd5b6060826040519080825280601f01601f1916602001820160405280156129b45781602001600182028038833980820191505090505b50905060008060208301915085602088010190506129d3828287612ae8565b8293505050509392505050565b60006129ed848484612b31565b6129f8878785612b31565b14905095945050505050565b60008251600283011115612a1757600080fd5b61ffff8260028501015116905092915050565b60008251600483011115612a3d57600080fd5b63ffffffff8260048501015116905092915050565b60006040518080612f6260249139602401905060405180910390207bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480612abd5750612abc82612b54565b5b9050919050565b6000828281518110612ad257fe5b602001015160f81c60f81b60f81c905092915050565b5b60208110612b0c5781518352602083019250602082019150602081039050612ae9565b60006001826020036101000a0390508019835116818551168181178652505050505050565b600083518284011115612b4357600080fd5b818360208601012090509392505050565b600063a8fa568260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480612bae5750612bad82612bb5565b5b9050919050565b600063bc1c58d160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480612c0f5750612c0e82612c16565b5b9050919050565b6000633b3b57de60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480612c705750612c6f82612c77565b5b9050919050565b6000632203ab5660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480612cd15750612cd082612cd8565b5b9050919050565b60006301ffc9a760e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6040518060e001604052806060815260200160008152602001600061ffff168152602001600061ffff168152602001600063ffffffff16815260200160008152602001600081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10612db557803560ff1916838001178555612de3565b82800160010185558215612de3579182015b82811115612de2578235825591602001919060010190612dc7565b5b509050612df09190612f3c565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10612e3557803560ff1916838001178555612e63565b82800160010185558215612e63579182015b82811115612e62578235825591602001919060010190612e47565b5b509050612e709190612f3c565b5090565b50805460018160011615610100020316600290046000825580601f10612e9a5750612eb9565b601f016020900490600052602060002090810190612eb89190612f3c565b5b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10612efd57805160ff1916838001178555612f2b565b82800160010185558215612f2b579182015b82811115612f2a578251825591602001919060010190612f0f565b5b509050612f389190612f3c565b5090565b612f5e91905b80821115612f5a576000816000905550600101612f42565b5090565b9056fe696e74657266616365496d706c656d656e74657228627974657333322c62797465733429a165627a7a72305820004bbde535f96d9c133b2ab9386a214d7a9f291f69bf81c08a729d6d58db59f00029",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101375760003560e01c806359d1d43c116100b8578063ad5780af1161007c578063ad5780af1461099a578063bc1c58d1146109c8578063c869023314610a6f578063d5fa2b0014610ab8578063e59d895d14610b06578063f86bc87914610b7d57610137565b806359d1d43c14610628578063623195b014610724578063691f3431146107b15780637737221314610858578063a8fa5682146108db57610137565b806329cd62ea116100ff57806329cd62ea1461044b578063304e6ade1461048d5780633b3b57de146105105780633e9ce7941461057e5780634cbf6ba4146105d857610137565b806301ffc9a71461013c5780630af179d7146101a157806310f13a8c14610224578063124a319c146102fc5780632203ab5614610393575b600080fd5b6101876004803603602081101561015257600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610c03565b604051808215151515815260200191505060405180910390f35b610222600480360360408110156101b757600080fd5b8101908080359060200190929190803590602001906401000000008111156101de57600080fd5b8201836020820111156101f057600080fd5b8035906020019184600183028401116401000000008311171561021257600080fd5b9091929391929390505050610c64565b005b6102fa6004803603606081101561023a57600080fd5b81019080803590602001909291908035906020019064010000000081111561026157600080fd5b82018360208201111561027357600080fd5b8035906020019184600183028401116401000000008311171561029557600080fd5b9091929391929390803590602001906401000000008111156102b657600080fd5b8201836020820111156102c857600080fd5b803590602001918460018302840111640100000000831117156102ea57600080fd5b9091929391929390505050610edd565b005b6103516004803603604081101561031257600080fd5b810190808035906020019092919080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610fc3565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103c9600480360360408110156103a957600080fd5b8101908080359060200190929190803590602001909291905050506114c0565b6040518083815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561040f5780820151818401526020810190506103f4565b50505050905090810190601f16801561043c5780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b61048b6004803603606081101561046157600080fd5b8101908080359060200190929190803590602001909291908035906020019092919050505061160f565b005b61050e600480360360408110156104a357600080fd5b8101908080359060200190929190803590602001906401000000008111156104ca57600080fd5b8201836020820111156104dc57600080fd5b803590602001918460018302840111640100000000831117156104fe57600080fd5b90919293919293905050506116a7565b005b61053c6004803603602081101561052657600080fd5b8101908080359060200190929190505050611747565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6105d66004803603606081101561059457600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050611784565b005b61060e600480360360408110156105ee57600080fd5b810190808035906020019092919080359060200190929190505050611898565b604051808215151515815260200191505060405180910390f35b6106a96004803603604081101561063e57600080fd5b81019080803590602001909291908035906020019064010000000081111561066557600080fd5b82018360208201111561067757600080fd5b8035906020019184600183028401116401000000008311171561069957600080fd5b9091929391929390505050611900565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156106e95780820151818401526020810190506106ce565b50505050905090810190601f1680156107165780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6107af6004803603606081101561073a57600080fd5b8101908080359060200190929190803590602001909291908035906020019064010000000081111561076b57600080fd5b82018360208201111561077d57600080fd5b8035906020019184600183028401116401000000008311171561079f57600080fd5b90919293919293905050506119dc565b005b6107dd600480360360208110156107c757600080fd5b8101908080359060200190929190505050611a69565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561081d578082015181840152602081019050610802565b50505050905090810190601f16801561084a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6108d96004803603604081101561086e57600080fd5b81019080803590602001909291908035906020019064010000000081111561089557600080fd5b8201836020820111156108a757600080fd5b803590602001918460018302840111640100000000831117156108c957600080fd5b9091929391929390505050611b1e565b005b61091f600480360360608110156108f157600080fd5b810190808035906020019092919080359060200190929190803561ffff169060200190929190505050611bbe565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561095f578082015181840152602081019050610944565b50505050905090810190601f16801561098c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6109c6600480360360208110156109b057600080fd5b8101908080359060200190929190505050611cc3565b005b6109f4600480360360208110156109de57600080fd5b8101908080359060200190929190505050611d2a565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610a34578082015181840152602081019050610a19565b50505050905090810190601f168015610a615780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610a9b60048036036020811015610a8557600080fd5b8101908080359060200190929190505050611ddf565b604051808381526020018281526020019250505060405180910390f35b610b0460048036036040811015610ace57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611e19565b005b610b7b60048036036060811015610b1c57600080fd5b810190808035906020019092919080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611ee7565b005b610be960048036036060811015610b9357600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612025565b604051808215151515815260200191505060405180910390f35b60006359d1d43c60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610c5d5750610c5c82612061565b5b9050919050565b82610c6e816120c2565b610c7757600080fd5b600080905060008090506060806000610c8e612d29565b610ce660008a8a8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505061224e90919063ffffffff16565b90505b610cf281612278565b610e6a5760008661ffff161415610d995780604001519550610d138161228e565b9350836040516020018082805190602001908083835b60208310610d4c5780518252602082019150602081019050602083039250610d29565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052805190602001209150610d92816122c5565b9250610e5c565b6060610da48261228e565b9050816040015161ffff168761ffff16141580610dd15750610dcf81866122f590919063ffffffff16565b155b15610e5a57610e338b86898d8d8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050508a8b88602001510360008b511461231c565b816040015196508160200151955080945084805190602001209250610e57826122c5565b93505b505b610e658161279d565b610ce9565b50600083511115610ed257610ed18984878b8b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505088898e8e905003600089511461231c565b5b505050505050505050565b84610ee7816120c2565b610ef057600080fd5b828260096000898152602001908152602001600020878760405180838380828437808301925050509250505090815260200160405180910390209190610f37929190612d74565b5084846040518083838082843780830192505050925050506040518091039020867fd8c9334b1a9c2f9da342a0a2b32629c1a229b6445dad78947f674b44444a7550878760405180806020018281038252848482818152602001925080828437600081840152601f19601f820116905080830192505050935050505060405180910390a3505050505050565b600080600660008581526020019081526020016000206000847bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461108857809150506114ba565b600061109385611747565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156110d5576000925050506114ba565b600060608273ffffffffffffffffffffffffffffffffffffffff166301ffc9a760e01b60405160240180827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019150506040516020818303038152906040527f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518082805190602001908083835b602083106111f657805182526020820191506020810190506020830392506111d3565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114611256576040519150601f19603f3d011682016040523d82523d6000602084013e61125b565b606091505b509150915081158061126e575060208151105b806112b55750600060f81b81601f8151811061128657fe5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b156112c75760009450505050506114ba565b8273ffffffffffffffffffffffffffffffffffffffff168660405160240180827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019150506040516020818303038152906040527f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518082805190602001908083835b602083106113dd57805182526020820191506020810190506020830392506113ba565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d806000811461143d576040519150601f19603f3d011682016040523d82523d6000602084013e611442565b606091505b508092508193505050811580611459575060208151105b806114a05750600060f81b81601f8151811061147157fe5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b156114b25760009450505050506114ba565b829450505050505b92915050565b60006060600080600086815260200190815260200160002090506000600190505b8481116115ec5760008582161415801561152157506000826000838152602001908152602001600020805460018160011615610100020316600290049050115b156115e05780826000838152602001908152602001600020808054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156115ce5780601f106115a3576101008083540402835291602001916115ce565b820191906000526020600020905b8154815290600101906020018083116115b157829003601f168201915b50505050509050935093505050611608565b600181901b90506114e1565b5060006040518060200160405280600081525081915092509250505b9250929050565b82611619816120c2565b61162257600080fd5b604051806040016040528084815260200183815250600860008681526020019081526020016000206000820151816000015560208201518160010155905050837f1d6f5e03d3f63eb58751986629a5439baee5079ff04f345becb66e23eb154e468484604051808381526020018281526020019250505060405180910390a250505050565b826116b1816120c2565b6116ba57600080fd5b82826002600087815260200190815260200160002091906116dc929190612df4565b50837fe379c1624ed7e714cc0937528a32359d69d5281337765313dba4e081b72d7578848460405180806020018281038252848482818152602001925080828437600081840152601f19601f820116905080830192505050935050505060405180910390a250505050565b60006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b80600b600085815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16847fe1c5610a6e0cbe10764ecd182adcef1ec338dc4e199c99c32ce98f38e12791df84604051808215151515815260200191505060405180910390a4505050565b60008060056000858152602001908152602001600020600060036000878152602001908152602001600020548152602001908152602001600020600084815260200190815260200160002060009054906101000a900461ffff1661ffff161415905092915050565b606060096000858152602001908152602001600020838360405180838380828437808301925050509250505090815260200160405180910390208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156119ce5780601f106119a3576101008083540402835291602001916119ce565b820191906000526020600020905b8154815290600101906020018083116119b157829003601f168201915b505050505090509392505050565b836119e6816120c2565b6119ef57600080fd5b600084600186031614611a0157600080fd5b828260008088815260200190815260200160002060008781526020019081526020016000209190611a33929190612df4565b5083857faa121bbeef5f32f5961a2a28966e769023910fc9479059ee3495d4c1a696efe360405160405180910390a35050505050565b6060600760008381526020019081526020016000208054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611b125780601f10611ae757610100808354040283529160200191611b12565b820191906000526020600020905b815481529060010190602001808311611af557829003601f168201915b50505050509050919050565b82611b28816120c2565b611b3157600080fd5b8282600760008781526020019081526020016000209190611b53929190612d74565b50837fb7d29e911041e8d9b843369e890bcb72c9388692ba48b65ac54e7214c4c348f7848460405180806020018281038252848482818152602001925080828437600081840152601f19601f820116905080830192505050935050505060405180910390a250505050565b606060046000858152602001908152602001600020600060036000878152602001908152602001600020548152602001908152602001600020600084815260200190815260200160002060008361ffff1661ffff1681526020019081526020016000208054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611cb55780601f10611c8a57610100808354040283529160200191611cb5565b820191906000526020600020905b815481529060010190602001808311611c9857829003601f168201915b505050505090509392505050565b80611ccd816120c2565b611cd657600080fd5b6003600083815260200190815260200160002060008154809291906001019190505550817fb757169b8492ca2f1c6619d9d76ce22803035c3b1d5f6930dffe7b127c1a198360405160405180910390a25050565b6060600260008381526020019081526020016000208054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611dd35780601f10611da857610100808354040283529160200191611dd3565b820191906000526020600020905b815481529060010190602001808311611db657829003601f168201915b50505050509050919050565b6000806008600084815260200190815260200160002060000154600860008581526020019081526020016000206001015491509150915091565b81611e23816120c2565b611e2c57600080fd5b816001600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550827f52d7d861f09ab3d26239d492e8968629f95e9e318cf0b73bfddc441522a15fd283604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a2505050565b82611ef1816120c2565b611efa57600080fd5b81600660008681526020019081526020016000206000857bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916847f7c69f06bea0bdef565b709e93a147836b0063ba2dd89f02d0b7e8d931e6a6daa84604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a350505050565b600b602052826000526040600020602052816000526040600020602052806000526040600020600092509250509054906101000a900460ff1681565b600063c869023360e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806120bb57506120ba826128b1565b5b9050919050565b600080600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166302571be3846040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561213857600080fd5b505afa15801561214c573d6000803e3d6000fd5b505050506040513d602081101561216257600080fd5b810190808051906020019092919050505090503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614806122465750600b600084815260200190815260200160002060008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b915050919050565b612256612d29565b828160000181905250818160c00181815250506122728161279d565b92915050565b6000816000015151826020015110159050919050565b60606122be82602001516122aa84600001518560200151612912565b846000015161296d9092919063ffffffff16565b9050919050565b60606122ee8260a001518360a001518460c0015103846000015161296d9092919063ffffffff16565b9050919050565b600081518351148015612314575061231383600084600087516129e0565b5b905092915050565b600060036000898152602001908152602001600020549050600087805190602001209050606061235786868961296d9092919063ffffffff16565b9050831561253f576000600460008c81526020019081526020016000206000858152602001908152602001600020600084815260200190815260200160002060008a61ffff1661ffff1681526020019081526020016000208054600181600116156101000203166002900490501461243357600560008b815260200190815260200160002060008481526020019081526020016000206000838152602001908152602001600020600081819054906101000a900461ffff16809291906001900391906101000a81548161ffff021916908361ffff160217905550505b600460008b81526020019081526020016000206000848152602001908152602001600020600083815260200190815260200160002060008961ffff1661ffff168152602001908152602001600020600061248d9190612e74565b897f03528ed0c2a3ebc993b12ce3c16bb382f9c7d88ef7d8a1bf290eaf35955a12078a8a60405180806020018361ffff1661ffff168152602001828103825284818151815260200191508051906020019080838360005b838110156124ff5780820151818401526020810190506124e4565b50505050905090810190601f16801561252c5780820380516001836020036101000a031916815260200191505b50935050505060405180910390a2612791565b6000600460008c81526020019081526020016000206000858152602001908152602001600020600084815260200190815260200160002060008a61ffff1661ffff168152602001908152602001600020805460018160011615610100020316600290049050141561261357600560008b815260200190815260200160002060008481526020019081526020016000206000838152602001908152602001600020600081819054906101000a900461ffff168092919060010191906101000a81548161ffff021916908361ffff160217905550505b80600460008c81526020019081526020016000206000858152602001908152602001600020600084815260200190815260200160002060008a61ffff1661ffff1681526020019081526020016000209080519060200190612675929190612ebc565b50897f52a608b3303a48862d07a73d82fa221318c0027fbbcfb1b2329bface3f19ff2b8a8a8460405180806020018461ffff1661ffff16815260200180602001838103835286818151815260200191508051906020019080838360005b838110156126ed5780820151818401526020810190506126d2565b50505050905090810190601f16801561271a5780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b83811015612753578082015181840152602081019050612738565b50505050905090810190601f1680156127805780820380516001836020036101000a031916815260200191505b509550505050505060405180910390a25b50505050505050505050565b8060c001518160200181815250508060000151518160200151106127c0576128ae565b60006127d482600001518360200151612912565b82602001510190506127f3818360000151612a0490919063ffffffff16565b826040019061ffff16908161ffff1681525050600281019050612823818360000151612a0490919063ffffffff16565b826060019061ffff16908161ffff1681525050600281019050612853818360000151612a2a90919063ffffffff16565b826080019063ffffffff16908163ffffffff16815250506004810190506000612889828460000151612a0490919063ffffffff16565b61ffff169050600282019150818360a00181815250508082018360c001818152505050505b50565b600063691f343160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061290b575061290a82612a52565b5b9050919050565b6000808290505b600115612961578351811061292a57fe5b600061293f8286612ac490919063ffffffff16565b60ff1690506001810182019150600081141561295b5750612961565b50612919565b82810391505092915050565b60608351828401111561297f57600080fd5b6060826040519080825280601f01601f1916602001820160405280156129b45781602001600182028038833980820191505090505b50905060008060208301915085602088010190506129d3828287612ae8565b8293505050509392505050565b60006129ed848484612b31565b6129f8878785612b31565b14905095945050505050565b60008251600283011115612a1757600080fd5b61ffff8260028501015116905092915050565b60008251600483011115612a3d57600080fd5b63ffffffff8260048501015116905092915050565b60006040518080612f6260249139602401905060405180910390207bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480612abd5750612abc82612b54565b5b9050919050565b6000828281518110612ad257fe5b602001015160f81c60f81b60f81c905092915050565b5b60208110612b0c5781518352602083019250602082019150602081039050612ae9565b60006001826020036101000a0390508019835116818551168181178652505050505050565b600083518284011115612b4357600080fd5b818360208601012090509392505050565b600063a8fa568260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480612bae5750612bad82612bb5565b5b9050919050565b600063bc1c58d160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480612c0f5750612c0e82612c16565b5b9050919050565b6000633b3b57de60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480612c705750612c6f82612c77565b5b9050919050565b6000632203ab5660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480612cd15750612cd082612cd8565b5b9050919050565b60006301ffc9a760e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6040518060e001604052806060815260200160008152602001600061ffff168152602001600061ffff168152602001600063ffffffff16815260200160008152602001600081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10612db557803560ff1916838001178555612de3565b82800160010185558215612de3579182015b82811115612de2578235825591602001919060010190612dc7565b5b509050612df09190612f3c565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10612e3557803560ff1916838001178555612e63565b82800160010185558215612e63579182015b82811115612e62578235825591602001919060010190612e47565b5b509050612e709190612f3c565b5090565b50805460018160011615610100020316600290046000825580601f10612e9a5750612eb9565b601f016020900490600052602060002090810190612eb89190612f3c565b5b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10612efd57805160ff1916838001178555612f2b565b82800160010185558215612f2b579182015b82811115612f2a578251825591602001919060010190612f0f565b5b509050612f389190612f3c565b5090565b612f5e91905b80821115612f5a576000816000905550600101612f42565b5090565b9056fe696e74657266616365496d706c656d656e74657228627974657333322c62797465733429a165627a7a72305820004bbde535f96d9c133b2ab9386a214d7a9f291f69bf81c08a729d6d58db59f00029",
  "sourceMap": "462:1802:5:-;;;1093:56;8:9:-1;5:2;;;30:1;27;20:12;5:2;1093:56:5;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1093:56:5;;;;;;;;;;;;;;;;1138:4;1132:3;;:10;;;;;;;;;;;;;;;;;;1093:56;462:1802;;;;;;",
  "deployedSourceMap": "462:1802:5:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;462:1802:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1116:169:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1116:169:15;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2379:1263:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2379:1263:11;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;2379:1263:11;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2379:1263:11;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2379:1263:11;;;;;;;;;;;;:::i;:::-;;582:184:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;582:184:15;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;582:184:15;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;582:184:15;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;582:184:15;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;582:184:15;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;582:184:15;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;582:184:15;;;;;;;;;;;;:::i;:::-;;1730:953:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1730:953:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1204:454:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1204:454:8;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1204:454:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;621:169:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;621:169:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;514:166:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;514:166:10;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;514:166:10;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;514:166:10;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;514:166:10;;;;;;;;;;;;:::i;:::-;;796:97:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;796:97:9;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1834:231:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1834:231:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4426:153:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4426:153:11;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;983:127:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;983:127:15;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;983:127:15;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;983:127:15;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;983:127:15;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;983:127:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;591:292:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;591:292:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;591:292:8;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;591:292:8;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;591:292:8;;;;;;;;;;;;:::i;:::-;;853:101:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;853:101:13;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;853:101:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;501:152;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;501:152:13;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;501:152:13;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;501:152:13;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;501:152:13;;;;;;;;;;;;:::i;:::-;;4044:168:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4044:168:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4044:168:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4718:128;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4718:128:11;;;;;;;;;;;;;;;;;:::i;:::-;;847:108:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;847:108:10;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;847:108:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1032:133:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1032:133:14;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;489:148:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;489:148:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;867:226:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;867:226:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;885:80:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;885:80:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1116:169:15;1183:4;153:10;1221:17;;1206:32;;;:11;:32;;;;:72;;;;1242:36;1266:11;1242:23;:36::i;:::-;1206:72;1199:79;;1116:169;;;:::o;2379:1263:11:-;2457:4;380:18:7;393:4;380:12;:18::i;:::-;372:27;;;;;;2473:15:11;2491:1;2473:19;;2502:14;2519:1;2502:18;;2530:17;2557:18;2585:16;2677:30;;:::i;:::-;2710:18;2726:1;2710:4;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;2710:15:11;;;;;;;;:18;;;;:::i;:::-;2677:51;;2672:821;2731:11;:4;:9;:11::i;:::-;2672:821;;2787:1;2775:8;:13;;;2771:712;;;2819:4;:12;;;2808:23;;2856:11;:4;:9;:11::i;:::-;2849:18;;2923:4;2906:22;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2906:22:11;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2906:22:11;;;2896:33;;;;;;2885:44;;2961:12;:4;:10;:12::i;:::-;2947:27;;2771:712;;;3013:20;3036:11;:4;:9;:11::i;:::-;3013:34;;3081:4;:12;;;3069:24;;:8;:24;;;;:49;;;;3098:20;3110:7;3098:4;:11;;:20;;;;:::i;:::-;3097:21;3069:49;3065:404;;;3142:88;3154:4;3160;3166:8;3176:4;;3142:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;3142:88:11;;;;;;3182:6;3204;3190:4;:11;;;:20;3228:1;3212:5;:12;:17;3142:11;:88::i;:::-;3263:4;:12;;;3252:23;;3306:4;:11;;;3297:20;;3346:7;3339:14;;3396:4;3386:15;;;;;;3375:26;;3437:12;:4;:10;:12::i;:::-;3423:27;;3065:404;2771:712;;2744:11;:4;:9;:11::i;:::-;2672:821;;;;3520:1;3506:4;:11;:15;3502:134;;;3537:88;3549:4;3555;3561:8;3571:4;;3537:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;3537:88:11;;;;;;3577:6;3599;3585:4;;:11;;:20;3623:1;3607:5;:12;:17;3537:11;:88::i;:::-;3502:134;409:1:7;;;;;2379:1263:11;;;;:::o;582:184:15:-;677:4;380:18:7;393:4;380:12;:18::i;:::-;372:27;;;;;;712:5:15;;693;:11;699:4;693:11;;;;;;;;;;;705:3;;693:16;;;;;30:3:-1;22:6;14;1:33;57:3;49:6;45:16;35:26;;693:16:15;;;;;;;;;;;;;;;;;;:24;;;;;;;:::i;:::-;;750:3;;732:27;;;;;30:3:-1;22:6;14;1:33;57:3;49:6;45:16;35:26;;732:27:15;;;;;;;;;;;;;744:4;732:27;755:3;;732:27;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;732:27:15;;;;;;;;;;;;;;582:184;;;;;;:::o;1730:953:12:-;1817:7;1836:19;1858:10;:16;1869:4;1858:16;;;;;;;;;;;:29;1875:11;1858:29;;;;;;;;;;;;;;;;;;;;;;;;;;;1836:51;;1923:1;1900:25;;:11;:25;;;1897:73;;1948:11;1941:18;;;;;1897:73;1980:9;1992:10;1997:4;1992;:10::i;:::-;1980:22;;2028:1;2015:15;;:1;:15;;;2012:62;;;2061:1;2046:17;;;;;;2012:62;2085:12;2099:23;2126:1;:12;;313:10;2192:17;;2139:71;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2139:71:12;;;;;;;38:4:-1;29:7;25:18;67:10;61:17;96:58;199:8;192:4;186;182:15;179:29;167:10;160:49;0:215;;;2139:71:12;2126:85;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2126:85:12;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;2084:127:12;;;;2225:7;2224:8;:34;;;;2256:2;2236:10;:17;:22;2224:34;:57;;;;2280:1;2262:19;;:10;2273:2;2262:14;;;;;;;;;;;;;;;;:19;;;;2224:57;2221:151;;;2359:1;2344:17;;;;;;;;2221:151;2406:1;:12;;2472:11;2419:65;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2419:65:12;;;;;;;38:4:-1;29:7;25:18;67:10;61:17;96:58;199:8;192:4;186;182:15;179:29;167:10;160:49;0:215;;;2419:65:12;2406:79;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2406:79:12;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;2382:103:12;;;;;;;;2499:7;2498:8;:34;;;;2530:2;2510:10;:17;:22;2498:34;:57;;;;2554:1;2536:19;;:10;2547:2;2536:14;;;;;;;;;;;;;;;;:19;;;;2498:57;2495:163;;;2645:1;2630:17;;;;;;;;2495:163;2675:1;2668:8;;;;;;1730:953;;;;;:::o;1204:454:8:-;1276:7;1285:12;1309:38;1350:4;:10;1355:4;1350:10;;;;;;;;;;;1309:51;;1376:19;1398:1;1376:23;;1371:249;1416:12;1401:11;:27;1371:249;;1499:1;1482:12;1468:11;:26;1467:33;;:67;;;;;1533:1;1504:6;:19;1511:11;1504:19;;;;;;;;;;;:26;;;;;;;;;;;;;;;;:30;1467:67;1463:147;;;1562:11;1575:6;:19;1582:11;1575:19;;;;;;;;;;;1554:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1463:147;1446:1;1430:17;;;;;1371:249;;;;1638:1;1641:9;;;;;;;;;;;;1630:21;;;;;;;;1204:454;;;;;;:::o;621:169:14:-;696:4;380:18:7;393:4;380:12;:18::i;:::-;372:27;;;;;;728:15:14;;;;;;;;738:1;728:15;;;;741:1;728:15;;;712:7;:13;720:4;712:13;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;;772:4;758:25;778:1;781;758:25;;;;;;;;;;;;;;;;;;;;;;;;621:169;;;;:::o;514:166:10:-;593:4;380:18:7;393:4;380:12;:18::i;:::-;372:27;;;;;;624:4:10;;609:6;:12;616:4;609:12;;;;;;;;;;;:19;;;;;;;:::i;:::-;;662:4;643:30;668:4;;643:30;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;643:30:10;;;;;;;;;;;;;;514:166;;;;:::o;796:97:9:-;845:7;871:9;:15;881:4;871:15;;;;;;;;;;;;;;;;;;;;;864:22;;796:97;;;:::o;1834:231:5:-;1971:12;1928:14;:20;1943:4;1928:20;;;;;;;;;;;:32;1949:10;1928:32;;;;;;;;;;;;;;;:40;1961:6;1928:40;;;;;;;;;;;;;;;;:55;;;;;;;;;;;;;;;;;;2037:6;1998:60;;2025:10;1998:60;;2019:4;1998:60;2045:12;1998:60;;;;;;;;;;;;;;;;;;;;;;1834:231;;;:::o;4426:153:11:-;4498:4;4570:1;4522:16;:22;4539:4;4522:22;;;;;;;;;;;:38;4545:8;:14;4554:4;4545:14;;;;;;;;;;;;4522:38;;;;;;;;;;;:44;4561:4;4522:44;;;;;;;;;;;;;;;;;;;;;:49;;;;4514:58;;4426:153;;;;:::o;983:127:15:-;1055:13;1087:5;:11;1093:4;1087:11;;;;;;;;;;;1099:3;;1087:16;;;;;30:3:-1;22:6;14;1:33;57:3;49:6;45:16;35:26;;1087:16:15;;;;;;;;;;;;;;;;;;1080:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;983:127;;;;;:::o;591:292:8:-;683:4;380:18:7;393:4;380:12;:18::i;:::-;372:27;;;;;;789:1:8;773:11;768:1;754:11;:15;753:31;752:38;744:47;;;;;;828:4;;802;:10;807:4;802:10;;;;;;;;;;;:23;813:11;802:23;;;;;;;;;;;:30;;;;;;;:::i;:::-;;864:11;858:4;847:29;;;;;;;;;;591:292;;;;;:::o;853:101:13:-;904:13;936:5;:11;942:4;936:11;;;;;;;;;;;929:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;853:101;;;:::o;501:152::-;574:4;380:18:7;393:4;380:12;:18::i;:::-;372:27;;;;;;604:4:13;;590:5;:11;596:4;590:11;;;;;;;;;;;:18;;;;;;;:::i;:::-;;635:4;623:23;641:4;;623:23;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;623:23:13;;;;;;;;;;;;;;501:152;;;;:::o;4044:168:11:-;4129:12;4160:7;:13;4168:4;4160:13;;;;;;;;;;;:29;4174:8;:14;4183:4;4174:14;;;;;;;;;;;;4160:29;;;;;;;;;;;:35;4190:4;4160:35;;;;;;;;;;;:45;4196:8;4160:45;;;;;;;;;;;;;;;4153:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4044:168;;;;;:::o;4718:128::-;4772:4;380:18:7;393:4;380:12;:18::i;:::-;372:27;;;;;;4788:8:11;:14;4797:4;4788:14;;;;;;;;;;;;:16;;;;;;;;;;;;;4834:4;4819:20;;;;;;;;;;4718:128;;:::o;847:108:10:-;905:12;936:6;:12;943:4;936:12;;;;;;;;;;;929:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;847:108;;;:::o;1032:133:14:-;1085:9;1096;1125:7;:13;1133:4;1125:13;;;;;;;;;;;:15;;;1142:7;:13;1150:4;1142:13;;;;;;;;;;;:15;;;1117:41;;;;1032:133;;;:::o;489:148:9:-;554:4;380:18:7;393:4;380:12;:18::i;:::-;372:27;;;;;;588:4:9;570:9;:15;580:4;570:15;;;;;;;;;;;;:22;;;;;;;;;;;;;;;;;;619:4;607:23;625:4;607:23;;;;;;;;;;;;;;;;;;;;;;489:148;;;:::o;867:226:12:-;964:4;380:18:7;393:4;380:12;:18::i;:::-;372:27;;;;;;1012:11:12;980:10;:16;991:4;980:16;;;;;;;;;;;:29;997:11;980:29;;;;;;;;;;;;;;;;;;:43;;;;;;;;;;;;;;;;;;1061:11;1038:48;;;1055:4;1038:48;1074:11;1038:48;;;;;;;;;;;;;;;;;;;;;;867:226;;;;:::o;885:80:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1171:171:14:-;1238:4;157:10;1276:19;;1261:34;;;:11;:34;;;;:74;;;;1299:36;1323:11;1299:23;:36::i;:::-;1261:74;1254:81;;1171:171;;;:::o;2071:191:5:-;2129:4;2145:13;2161:3;;;;;;;;;;;:9;;;2171:4;2161:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2161:15:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2161:15:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2161:15:5;;;;;;;;;;;;;;;;2145:31;;2202:10;2193:19;;:5;:19;;;:62;;;;2216:14;:20;2231:4;2216:20;;;;;;;;;;;:27;2237:5;2216:27;;;;;;;;;;;;;;;:39;2244:10;2216:39;;;;;;;;;;;;;;;;;;;;;;;;;2193:62;2186:69;;;2071:191;;;:::o;2408:182:6:-;2483:21;;:::i;:::-;2527:4;2516:3;:8;;:15;;;;2558:6;2541:3;:14;;:23;;;;;2574:9;2579:3;2574:4;:9::i;:::-;2408:182;;;;:::o;2761:121::-;2821:4;2859;:9;;;:16;2844:4;:11;;;:31;;2837:38;;2761:121;;;:::o;3863:166::-;3923:12;3954:68;3974:4;:11;;;3987:34;3998:4;:9;;;4009:4;:11;;;3987:10;:34::i;:::-;3954:4;:9;;;:19;;:68;;;;;:::i;:::-;3947:75;;3863:166;;;:::o;4202:172::-;4263:12;4294:73;4314:4;:16;;;4350:4;:16;;;4332:4;:15;;;:34;4294:4;:9;;;:19;;:73;;;;;:::i;:::-;4287:80;;4202:172;;;:::o;4913:176:1:-;4990:4;5028:5;:12;5013:4;:11;:27;:69;;;;;5044:38;5051:4;5057:1;5060:5;5067:1;5070:4;:11;5044:6;:38::i;:::-;5013:69;5006:76;;4913:176;;;;:::o;5033:965:11:-;5251:15;5269:8;:14;5278:4;5269:14;;;;;;;;;;;;5251:32;;5293:16;5322:4;5312:15;;;;;;5293:34;;5337:19;5359:28;5374:6;5382:4;5359;:14;;:28;;;;;:::i;:::-;5337:50;;5401:12;5397:595;;;5486:1;5433:7;:13;5441:4;5433:13;;;;;;;;;;;:22;5447:7;5433:22;;;;;;;;;;;:32;5456:8;5433:32;;;;;;;;;;;:42;5466:8;5433:42;;;;;;;;;;;;;;;:49;;;;;;;;;;;;;;;;:54;5429:136;;5507:16;:22;5524:4;5507:22;;;;;;;;;;;:31;5530:7;5507:31;;;;;;;;;;;:41;5539:8;5507:41;;;;;;;;;;;;:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5429:136;5585:7;:13;5593:4;5585:13;;;;;;;;;;;:22;5599:7;5585:22;;;;;;;;;;;:32;5608:8;5585:32;;;;;;;;;;;:42;5618:8;5585:42;;;;;;;;;;;;;;;;5578:50;;;;:::i;:::-;5664:4;5647:38;5670:4;5676:8;5647:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5647:38:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5397:595;;;5773:1;5720:7;:13;5728:4;5720:13;;;;;;;;;;;:22;5734:7;5720:22;;;;;;;;;;;:32;5743:8;5720:32;;;;;;;;;;;:42;5753:8;5720:42;;;;;;;;;;;;;;;:49;;;;;;;;;;;;;;;;:54;5716:136;;;5794:16;:22;5811:4;5794:22;;;;;;;;;;;:31;5817:7;5794:31;;;;;;;;;;;:41;5826:8;5794:41;;;;;;;;;;;;:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5716:136;5910:6;5865:7;:13;5873:4;5865:13;;;;;;;;;;;:22;5879:7;5865:22;;;;;;;;;;;:32;5888:8;5865:32;;;;;;;;;;;:42;5898:8;5865:42;;;;;;;;;;;;;;;:51;;;;;;;;;;;;:::i;:::-;;5952:4;5935:46;5958:4;5964:8;5974:6;5935:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5935:46:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5935:46:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5397:595;5033:965;;;;;;;;;;:::o;3005:682:6:-;3081:4;:15;;;3067:4;:11;;:29;;;;;3125:4;:9;;;:16;3110:4;:11;;;:31;3106:68;;3157:7;;3106:68;3209:8;3234:34;3245:4;:9;;;3256:4;:11;;;3234:10;:34::i;:::-;3220:4;:11;;;:48;3209:59;;3331:25;3352:3;3331:4;:9;;;:20;;:25;;;;:::i;:::-;3316:4;:12;;:40;;;;;;;;;;;3373:1;3366:8;;;;3397:25;3418:3;3397:4;:9;;;:20;;:25;;;;:::i;:::-;3384:4;:10;;:38;;;;;;;;;;;3439:1;3432:8;;;;3461:25;3482:3;3461:4;:9;;;:20;;:25;;;;:::i;:::-;3450:4;:8;;:36;;;;;;;;;;;3503:1;3496:8;;;;3541:16;3560:25;3581:3;3560:4;:9;;;:20;;:25;;;;:::i;:::-;3541:44;;;;3602:1;3595:8;;;;3632:3;3613:4;:16;;:22;;;;;3669:11;3663:3;:17;3645:4;:15;;:35;;;;;3005:682;;;;:::o;960:169:13:-;1027:4;153:10;1065:17;;1050:32;;;:11;:32;;;;:72;;;;1086:36;1110:11;1086:23;:36::i;:::-;1050:72;1043:79;;960:169;;;:::o;508:367:6:-;582:4;598:8;609:6;598:17;;625:215;632:4;625:215;;;665:4;:11;659:3;:17;652:25;;;;691:13;707:19;722:3;707:4;:14;;:19;;;;:::i;:::-;691:35;;;;758:1;747:8;:12;740:19;;;;789:1;777:8;:13;773:57;;;810:5;;;773:57;625:215;;;;862:6;856:3;:12;849:19;;;508:367;;;;:::o;8683:393:1:-;8766:12;8814:4;:11;8807:3;8798:6;:12;:27;;8790:36;;;;;;8837:16;8866:3;8856:14;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;8856:14:1;;;;8837:33;;8880:9;8899:8;8958:2;8953:3;8949:12;8941:20;;9000:6;8995:2;8989:4;8985:13;8981:26;8974:33;;9026:22;9033:4;9039:3;9044;9026:6;:22::i;:::-;9066:3;9059:10;;;;;8683:393;;;;;:::o;3277:209::-;3396:4;3448:31;3455:5;3462:11;3475:3;3448:6;:31::i;:::-;3419:25;3426:4;3432:6;3440:3;3419:6;:25::i;:::-;:60;3412:67;;3277:209;;;;;;;:::o;5697:223::-;5769:10;5810:4;:11;5805:1;5799:3;:7;:22;;5791:31;;;;;;5897:6;5890:3;5886:1;5880:4;5876:12;5872:22;5866:29;5862:42;5855:49;;5841:73;;;;:::o;6164:227::-;6236:10;6277:4;:11;6272:1;6266:3;:7;:22;;6258:31;;;;;;6364:10;6357:3;6353:1;6347:4;6343:12;6339:22;6333:29;6329:46;6322:53;;6308:77;;;;:::o;2689:174:12:-;2756:4;213:49;;;;;;;;;;;;;;;;;;;2779:37;;;:11;:37;;;;:77;;;;2820:36;2844:11;2820:23;:36::i;:::-;2779:77;2772:84;;2689:174;;;:::o;5331:122:1:-;5402:9;5436:4;5441:3;5436:9;;;;;;;;;;;;;;;;5430:16;;5423:23;;5331:122;;;;:::o;7914:549::-;8034:165;8048:2;8041:3;:9;8034:165;;8123:3;8117:10;8111:4;8104:24;8163:2;8155:10;;;;8186:2;8179:9;;;;8059:2;8052:9;;;;8034:165;;;8241:9;8273:1;8266:3;8261:2;:8;8253:3;:17;:21;8241:33;;8342:4;8338:9;8332:3;8326:10;8322:26;8394:4;8387;8381:11;8377:22;8438:7;8428:8;8425:21;8419:4;8412:35;8293:164;;;;;;:::o;306:238::-;387:11;434:4;:11;427:3;418:6;:12;:27;;410:36;;;;;;524:3;515:6;510:2;504:4;500:13;496:26;486:42;479:49;;465:73;;;;;:::o;4852:175:11:-;4919:4;241:10;4957:23;;4942:38;;;:11;:38;;;;:78;;;;4984:36;5008:11;4984:23;:36::i;:::-;4942:78;4935:85;;4852:175;;;:::o;961:177:10:-;1028:4;168:10;1066:25;;1051:40;;;:11;:40;;;;:80;;;;1095:36;1119:11;1095:23;:36::i;:::-;1051:80;1044:87;;961:177;;;:::o;899:169:9:-;966:4;153:10;1004:17;;989:32;;;:11;:32;;;;:72;;;;1025:36;1049:11;1025:23;:36::i;:::-;989:72;982:79;;899:169;;;:::o;1664:168:8:-;1731:4;151:10;1769:16;;1754:31;;;:11;:31;;;;:71;;;;1789:36;1813:11;1789:23;:36::i;:::-;1754:71;1747:78;;1664:168;;;:::o;123:129:7:-;190:4;106:10;228:17;;213:32;;;:11;:32;;;;206:39;;123:129;;;:::o;462:1802:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"./ENS.sol\";\nimport \"./profiles/ABIResolver.sol\";\nimport \"./profiles/AddrResolver.sol\";\nimport \"./profiles/ContentHashResolver.sol\";\nimport \"./profiles/DNSResolver.sol\";\nimport \"./profiles/InterfaceResolver.sol\";\nimport \"./profiles/NameResolver.sol\";\nimport \"./profiles/PubkeyResolver.sol\";\nimport \"./profiles/TextResolver.sol\";\n\n/**\n * A simple resolver anyone can use; only allows the owner of a node to set its\n * address.\n */\ncontract PublicResolver is ABIResolver, AddrResolver, ContentHashResolver, DNSResolver, InterfaceResolver, NameResolver, PubkeyResolver, TextResolver {\n    ENS ens;\n\n    /**\n     * A mapping of authorisations. An address that is authorised for a name\n     * may make any changes to the name that the owner could, but may not update\n     * the set of authorisations.\n     * (node, owner, caller) => isAuthorised\n     */\n    mapping(bytes32=>mapping(address=>mapping(address=>bool))) public authorisations;\n\n    event AuthorisationChanged(bytes32 indexed node, address indexed owner, address indexed target, bool isAuthorised);\n\n    constructor(ENS _ens) public {\n        ens = _ens;\n    }\n\n    /**\n     * @dev Sets or clears an authorisation.\n     * Authorisations are specific to the caller. Any account can set an authorisation\n     * for any name, but the authorisation that is checked will be that of the\n     * current owner of a name. Thus, transferring a name effectively clears any\n     * existing authorisations, and new authorisations can be set in advance of\n     * an ownership transfer if desired.\n     *\n     * @param node The name to change the authorisation on.\n     * @param target The address that is to be authorised or deauthorised.\n     * @param isAuthorised True if the address should be authorised, or false if it should be deauthorised.\n     */\n    function setAuthorisation(bytes32 node, address target, bool isAuthorised) external {\n        authorisations[node][msg.sender][target] = isAuthorised;\n        emit AuthorisationChanged(node, msg.sender, target, isAuthorised);\n    }\n\n    function isAuthorised(bytes32 node) internal view returns(bool) {\n        address owner = ens.owner(node);\n        return owner == msg.sender || authorisations[node][owner][msg.sender];\n    }\n}\n",
  "sourcePath": "/Users/tyler/projects/truffle/packages/truffle-deployer/test/sources/init/contracts/PublicResolver.sol",
  "ast": {
    "absolutePath": "/Users/tyler/projects/truffle/packages/truffle-deployer/test/sources/init/contracts/PublicResolver.sol",
    "exportedSymbols": {
      "PublicResolver": [
        1633
      ]
    },
    "id": 1634,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1519,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:5"
      },
      {
        "absolutePath": "/Users/tyler/projects/truffle/packages/truffle-deployer/test/sources/init/contracts/ENS.sol",
        "file": "./ENS.sol",
        "id": 1520,
        "nodeType": "ImportDirective",
        "scope": 1634,
        "sourceUnit": 1272,
        "src": "25:19:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/tyler/projects/truffle/packages/truffle-deployer/test/sources/init/contracts/profiles/ABIResolver.sol",
        "file": "./profiles/ABIResolver.sol",
        "id": 1521,
        "nodeType": "ImportDirective",
        "scope": 1634,
        "sourceUnit": 2428,
        "src": "45:36:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/tyler/projects/truffle/packages/truffle-deployer/test/sources/init/contracts/profiles/AddrResolver.sol",
        "file": "./profiles/AddrResolver.sol",
        "id": 1522,
        "nodeType": "ImportDirective",
        "scope": 1634,
        "sourceUnit": 2498,
        "src": "82:37:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/tyler/projects/truffle/packages/truffle-deployer/test/sources/init/contracts/profiles/ContentHashResolver.sol",
        "file": "./profiles/ContentHashResolver.sol",
        "id": 1523,
        "nodeType": "ImportDirective",
        "scope": 1634,
        "sourceUnit": 2568,
        "src": "120:44:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/tyler/projects/truffle/packages/truffle-deployer/test/sources/init/contracts/profiles/DNSResolver.sol",
        "file": "./profiles/DNSResolver.sol",
        "id": 1524,
        "nodeType": "ImportDirective",
        "scope": 1634,
        "sourceUnit": 2999,
        "src": "165:36:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/tyler/projects/truffle/packages/truffle-deployer/test/sources/init/contracts/profiles/InterfaceResolver.sol",
        "file": "./profiles/InterfaceResolver.sol",
        "id": 1525,
        "nodeType": "ImportDirective",
        "scope": 1634,
        "sourceUnit": 3186,
        "src": "202:42:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/tyler/projects/truffle/packages/truffle-deployer/test/sources/init/contracts/profiles/NameResolver.sol",
        "file": "./profiles/NameResolver.sol",
        "id": 1526,
        "nodeType": "ImportDirective",
        "scope": 1634,
        "sourceUnit": 3256,
        "src": "245:37:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/tyler/projects/truffle/packages/truffle-deployer/test/sources/init/contracts/profiles/PubkeyResolver.sol",
        "file": "./profiles/PubkeyResolver.sol",
        "id": 1527,
        "nodeType": "ImportDirective",
        "scope": 1634,
        "sourceUnit": 3347,
        "src": "283:39:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/tyler/projects/truffle/packages/truffle-deployer/test/sources/init/contracts/profiles/TextResolver.sol",
        "file": "./profiles/TextResolver.sol",
        "id": 1528,
        "nodeType": "ImportDirective",
        "scope": 1634,
        "sourceUnit": 3430,
        "src": "323:37:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1529,
              "name": "ABIResolver",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2427,
              "src": "489:11:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ABIResolver_$2427",
                "typeString": "contract ABIResolver"
              }
            },
            "id": 1530,
            "nodeType": "InheritanceSpecifier",
            "src": "489:11:5"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1531,
              "name": "AddrResolver",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2497,
              "src": "502:12:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AddrResolver_$2497",
                "typeString": "contract AddrResolver"
              }
            },
            "id": 1532,
            "nodeType": "InheritanceSpecifier",
            "src": "502:12:5"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1533,
              "name": "ContentHashResolver",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2567,
              "src": "516:19:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ContentHashResolver_$2567",
                "typeString": "contract ContentHashResolver"
              }
            },
            "id": 1534,
            "nodeType": "InheritanceSpecifier",
            "src": "516:19:5"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1535,
              "name": "DNSResolver",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2998,
              "src": "537:11:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DNSResolver_$2998",
                "typeString": "contract DNSResolver"
              }
            },
            "id": 1536,
            "nodeType": "InheritanceSpecifier",
            "src": "537:11:5"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1537,
              "name": "InterfaceResolver",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3185,
              "src": "550:17:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_InterfaceResolver_$3185",
                "typeString": "contract InterfaceResolver"
              }
            },
            "id": 1538,
            "nodeType": "InheritanceSpecifier",
            "src": "550:17:5"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1539,
              "name": "NameResolver",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3255,
              "src": "569:12:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NameResolver_$3255",
                "typeString": "contract NameResolver"
              }
            },
            "id": 1540,
            "nodeType": "InheritanceSpecifier",
            "src": "569:12:5"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1541,
              "name": "PubkeyResolver",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3346,
              "src": "583:14:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PubkeyResolver_$3346",
                "typeString": "contract PubkeyResolver"
              }
            },
            "id": 1542,
            "nodeType": "InheritanceSpecifier",
            "src": "583:14:5"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1543,
              "name": "TextResolver",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3429,
              "src": "599:12:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TextResolver_$3429",
                "typeString": "contract TextResolver"
              }
            },
            "id": 1544,
            "nodeType": "InheritanceSpecifier",
            "src": "599:12:5"
          }
        ],
        "contractDependencies": [
          2291,
          2427,
          2497,
          2567,
          2998,
          3185,
          3255,
          3346,
          3429
        ],
        "contractKind": "contract",
        "documentation": "A simple resolver anyone can use; only allows the owner of a node to set its\naddress.",
        "fullyImplemented": true,
        "id": 1633,
        "linearizedBaseContracts": [
          1633,
          3429,
          3346,
          3255,
          3185,
          2998,
          2567,
          2497,
          2427,
          2291
        ],
        "name": "PublicResolver",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1546,
            "name": "ens",
            "nodeType": "VariableDeclaration",
            "scope": 1633,
            "src": "618:7:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ENS_$1271",
              "typeString": "contract ENS"
            },
            "typeName": {
              "contractScope": null,
              "id": 1545,
              "name": "ENS",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1271,
              "src": "618:3:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ENS_$1271",
                "typeString": "contract ENS"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1554,
            "name": "authorisations",
            "nodeType": "VariableDeclaration",
            "scope": 1633,
            "src": "885:80:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$_$",
              "typeString": "mapping(bytes32 => mapping(address => mapping(address => bool)))"
            },
            "typeName": {
              "id": 1553,
              "keyType": {
                "id": 1547,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "893:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "885:58:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$_$",
                "typeString": "mapping(bytes32 => mapping(address => mapping(address => bool)))"
              },
              "valueType": {
                "id": 1552,
                "keyType": {
                  "id": 1548,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "910:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "902:40:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                  "typeString": "mapping(address => mapping(address => bool))"
                },
                "valueType": {
                  "id": 1551,
                  "keyType": {
                    "id": 1549,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "927:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "919:22:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "valueType": {
                    "id": 1550,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "936:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1564,
            "name": "AuthorisationChanged",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1563,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1556,
                  "indexed": true,
                  "name": "node",
                  "nodeType": "VariableDeclaration",
                  "scope": 1564,
                  "src": "999:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1555,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "999:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1558,
                  "indexed": true,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 1564,
                  "src": "1021:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1557,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1021:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1560,
                  "indexed": true,
                  "name": "target",
                  "nodeType": "VariableDeclaration",
                  "scope": 1564,
                  "src": "1044:22:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1559,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1044:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1562,
                  "indexed": false,
                  "name": "isAuthorised",
                  "nodeType": "VariableDeclaration",
                  "scope": 1564,
                  "src": "1068:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1561,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1068:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "998:88:5"
            },
            "src": "972:115:5"
          },
          {
            "body": {
              "id": 1573,
              "nodeType": "Block",
              "src": "1122:27:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1569,
                      "name": "ens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1546,
                      "src": "1132:3:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ENS_$1271",
                        "typeString": "contract ENS"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1570,
                      "name": "_ens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1566,
                      "src": "1138:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ENS_$1271",
                        "typeString": "contract ENS"
                      }
                    },
                    "src": "1132:10:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ENS_$1271",
                      "typeString": "contract ENS"
                    }
                  },
                  "id": 1572,
                  "nodeType": "ExpressionStatement",
                  "src": "1132:10:5"
                }
              ]
            },
            "documentation": null,
            "id": 1574,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1567,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1566,
                  "name": "_ens",
                  "nodeType": "VariableDeclaration",
                  "scope": 1574,
                  "src": "1105:8:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ENS_$1271",
                    "typeString": "contract ENS"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1565,
                    "name": "ENS",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1271,
                    "src": "1105:3:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ENS_$1271",
                      "typeString": "contract ENS"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1104:10:5"
            },
            "returnParameters": {
              "id": 1568,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1122:0:5"
            },
            "scope": 1633,
            "src": "1093:56:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1602,
              "nodeType": "Block",
              "src": "1918:147:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1592,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1583,
                            "name": "authorisations",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1554,
                            "src": "1928:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$_$",
                              "typeString": "mapping(bytes32 => mapping(address => mapping(address => bool)))"
                            }
                          },
                          "id": 1588,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1584,
                            "name": "node",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1576,
                            "src": "1943:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1928:20:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(address => bool))"
                          }
                        },
                        "id": 1589,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1585,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3444,
                            "src": "1949:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1586,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1949:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1928:32:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1590,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1587,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1578,
                        "src": "1961:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1928:40:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1591,
                      "name": "isAuthorised",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1580,
                      "src": "1971:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1928:55:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1593,
                  "nodeType": "ExpressionStatement",
                  "src": "1928:55:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1595,
                        "name": "node",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1576,
                        "src": "2019:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1596,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3444,
                          "src": "2025:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1597,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2025:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1598,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1578,
                        "src": "2037:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1599,
                        "name": "isAuthorised",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1580,
                        "src": "2045:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1594,
                      "name": "AuthorisationChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1564,
                      "src": "1998:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (bytes32,address,address,bool)"
                      }
                    },
                    "id": 1600,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1998:60:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1601,
                  "nodeType": "EmitStatement",
                  "src": "1993:65:5"
                }
              ]
            },
            "documentation": "@dev Sets or clears an authorisation.\nAuthorisations are specific to the caller. Any account can set an authorisation\nfor any name, but the authorisation that is checked will be that of the\ncurrent owner of a name. Thus, transferring a name effectively clears any\nexisting authorisations, and new authorisations can be set in advance of\nan ownership transfer if desired.\n     * @param node The name to change the authorisation on.\n@param target The address that is to be authorised or deauthorised.\n@param isAuthorised True if the address should be authorised, or false if it should be deauthorised.",
            "id": 1603,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setAuthorisation",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1581,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1576,
                  "name": "node",
                  "nodeType": "VariableDeclaration",
                  "scope": 1603,
                  "src": "1860:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1575,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1860:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1578,
                  "name": "target",
                  "nodeType": "VariableDeclaration",
                  "scope": 1603,
                  "src": "1874:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1577,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1874:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1580,
                  "name": "isAuthorised",
                  "nodeType": "VariableDeclaration",
                  "scope": 1603,
                  "src": "1890:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1579,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1890:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1859:49:5"
            },
            "returnParameters": {
              "id": 1582,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1918:0:5"
            },
            "scope": 1633,
            "src": "1834:231:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1631,
              "nodeType": "Block",
              "src": "2135:127:5",
              "statements": [
                {
                  "assignments": [
                    1611
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1611,
                      "name": "owner",
                      "nodeType": "VariableDeclaration",
                      "scope": 1631,
                      "src": "2145:13:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1610,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2145:7:5",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1616,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1614,
                        "name": "node",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1605,
                        "src": "2171:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1612,
                        "name": "ens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1546,
                        "src": "2161:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ENS_$1271",
                          "typeString": "contract ENS"
                        }
                      },
                      "id": 1613,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "owner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1256,
                      "src": "2161:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes32) view external returns (address)"
                      }
                    },
                    "id": 1615,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2161:15:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2145:31:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1629,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 1620,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 1617,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1611,
                        "src": "2193:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1618,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3444,
                          "src": "2202:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1619,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2202:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "src": "2193:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1621,
                            "name": "authorisations",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1554,
                            "src": "2216:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$_$",
                              "typeString": "mapping(bytes32 => mapping(address => mapping(address => bool)))"
                            }
                          },
                          "id": 1623,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1622,
                            "name": "node",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1605,
                            "src": "2231:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2216:20:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(address => bool))"
                          }
                        },
                        "id": 1625,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1624,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1611,
                          "src": "2237:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2216:27:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1628,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1626,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3444,
                          "src": "2244:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1627,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2244:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2216:39:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2193:62:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1609,
                  "id": 1630,
                  "nodeType": "Return",
                  "src": "2186:69:5"
                }
              ]
            },
            "documentation": null,
            "id": 1632,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isAuthorised",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1606,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1605,
                  "name": "node",
                  "nodeType": "VariableDeclaration",
                  "scope": 1632,
                  "src": "2093:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1604,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2093:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2092:14:5"
            },
            "returnParameters": {
              "id": 1609,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1608,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1632,
                  "src": "2129:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1607,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2129:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2128:6:5"
            },
            "scope": 1633,
            "src": "2071:191:5",
            "stateMutability": "view",
            "superFunction": 2278,
            "visibility": "internal"
          }
        ],
        "scope": 1634,
        "src": "462:1802:5"
      }
    ],
    "src": "0:2265:5"
  },
  "legacyAST": {
    "absolutePath": "/Users/tyler/projects/truffle/packages/truffle-deployer/test/sources/init/contracts/PublicResolver.sol",
    "exportedSymbols": {
      "PublicResolver": [
        1633
      ]
    },
    "id": 1634,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1519,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:5"
      },
      {
        "absolutePath": "/Users/tyler/projects/truffle/packages/truffle-deployer/test/sources/init/contracts/ENS.sol",
        "file": "./ENS.sol",
        "id": 1520,
        "nodeType": "ImportDirective",
        "scope": 1634,
        "sourceUnit": 1272,
        "src": "25:19:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/tyler/projects/truffle/packages/truffle-deployer/test/sources/init/contracts/profiles/ABIResolver.sol",
        "file": "./profiles/ABIResolver.sol",
        "id": 1521,
        "nodeType": "ImportDirective",
        "scope": 1634,
        "sourceUnit": 2428,
        "src": "45:36:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/tyler/projects/truffle/packages/truffle-deployer/test/sources/init/contracts/profiles/AddrResolver.sol",
        "file": "./profiles/AddrResolver.sol",
        "id": 1522,
        "nodeType": "ImportDirective",
        "scope": 1634,
        "sourceUnit": 2498,
        "src": "82:37:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/tyler/projects/truffle/packages/truffle-deployer/test/sources/init/contracts/profiles/ContentHashResolver.sol",
        "file": "./profiles/ContentHashResolver.sol",
        "id": 1523,
        "nodeType": "ImportDirective",
        "scope": 1634,
        "sourceUnit": 2568,
        "src": "120:44:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/tyler/projects/truffle/packages/truffle-deployer/test/sources/init/contracts/profiles/DNSResolver.sol",
        "file": "./profiles/DNSResolver.sol",
        "id": 1524,
        "nodeType": "ImportDirective",
        "scope": 1634,
        "sourceUnit": 2999,
        "src": "165:36:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/tyler/projects/truffle/packages/truffle-deployer/test/sources/init/contracts/profiles/InterfaceResolver.sol",
        "file": "./profiles/InterfaceResolver.sol",
        "id": 1525,
        "nodeType": "ImportDirective",
        "scope": 1634,
        "sourceUnit": 3186,
        "src": "202:42:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/tyler/projects/truffle/packages/truffle-deployer/test/sources/init/contracts/profiles/NameResolver.sol",
        "file": "./profiles/NameResolver.sol",
        "id": 1526,
        "nodeType": "ImportDirective",
        "scope": 1634,
        "sourceUnit": 3256,
        "src": "245:37:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/tyler/projects/truffle/packages/truffle-deployer/test/sources/init/contracts/profiles/PubkeyResolver.sol",
        "file": "./profiles/PubkeyResolver.sol",
        "id": 1527,
        "nodeType": "ImportDirective",
        "scope": 1634,
        "sourceUnit": 3347,
        "src": "283:39:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/tyler/projects/truffle/packages/truffle-deployer/test/sources/init/contracts/profiles/TextResolver.sol",
        "file": "./profiles/TextResolver.sol",
        "id": 1528,
        "nodeType": "ImportDirective",
        "scope": 1634,
        "sourceUnit": 3430,
        "src": "323:37:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1529,
              "name": "ABIResolver",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2427,
              "src": "489:11:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ABIResolver_$2427",
                "typeString": "contract ABIResolver"
              }
            },
            "id": 1530,
            "nodeType": "InheritanceSpecifier",
            "src": "489:11:5"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1531,
              "name": "AddrResolver",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2497,
              "src": "502:12:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AddrResolver_$2497",
                "typeString": "contract AddrResolver"
              }
            },
            "id": 1532,
            "nodeType": "InheritanceSpecifier",
            "src": "502:12:5"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1533,
              "name": "ContentHashResolver",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2567,
              "src": "516:19:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ContentHashResolver_$2567",
                "typeString": "contract ContentHashResolver"
              }
            },
            "id": 1534,
            "nodeType": "InheritanceSpecifier",
            "src": "516:19:5"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1535,
              "name": "DNSResolver",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2998,
              "src": "537:11:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DNSResolver_$2998",
                "typeString": "contract DNSResolver"
              }
            },
            "id": 1536,
            "nodeType": "InheritanceSpecifier",
            "src": "537:11:5"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1537,
              "name": "InterfaceResolver",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3185,
              "src": "550:17:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_InterfaceResolver_$3185",
                "typeString": "contract InterfaceResolver"
              }
            },
            "id": 1538,
            "nodeType": "InheritanceSpecifier",
            "src": "550:17:5"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1539,
              "name": "NameResolver",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3255,
              "src": "569:12:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NameResolver_$3255",
                "typeString": "contract NameResolver"
              }
            },
            "id": 1540,
            "nodeType": "InheritanceSpecifier",
            "src": "569:12:5"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1541,
              "name": "PubkeyResolver",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3346,
              "src": "583:14:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PubkeyResolver_$3346",
                "typeString": "contract PubkeyResolver"
              }
            },
            "id": 1542,
            "nodeType": "InheritanceSpecifier",
            "src": "583:14:5"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1543,
              "name": "TextResolver",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3429,
              "src": "599:12:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TextResolver_$3429",
                "typeString": "contract TextResolver"
              }
            },
            "id": 1544,
            "nodeType": "InheritanceSpecifier",
            "src": "599:12:5"
          }
        ],
        "contractDependencies": [
          2291,
          2427,
          2497,
          2567,
          2998,
          3185,
          3255,
          3346,
          3429
        ],
        "contractKind": "contract",
        "documentation": "A simple resolver anyone can use; only allows the owner of a node to set its\naddress.",
        "fullyImplemented": true,
        "id": 1633,
        "linearizedBaseContracts": [
          1633,
          3429,
          3346,
          3255,
          3185,
          2998,
          2567,
          2497,
          2427,
          2291
        ],
        "name": "PublicResolver",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1546,
            "name": "ens",
            "nodeType": "VariableDeclaration",
            "scope": 1633,
            "src": "618:7:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ENS_$1271",
              "typeString": "contract ENS"
            },
            "typeName": {
              "contractScope": null,
              "id": 1545,
              "name": "ENS",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1271,
              "src": "618:3:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ENS_$1271",
                "typeString": "contract ENS"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1554,
            "name": "authorisations",
            "nodeType": "VariableDeclaration",
            "scope": 1633,
            "src": "885:80:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$_$",
              "typeString": "mapping(bytes32 => mapping(address => mapping(address => bool)))"
            },
            "typeName": {
              "id": 1553,
              "keyType": {
                "id": 1547,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "893:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "885:58:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$_$",
                "typeString": "mapping(bytes32 => mapping(address => mapping(address => bool)))"
              },
              "valueType": {
                "id": 1552,
                "keyType": {
                  "id": 1548,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "910:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "902:40:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                  "typeString": "mapping(address => mapping(address => bool))"
                },
                "valueType": {
                  "id": 1551,
                  "keyType": {
                    "id": 1549,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "927:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "919:22:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "valueType": {
                    "id": 1550,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "936:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1564,
            "name": "AuthorisationChanged",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1563,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1556,
                  "indexed": true,
                  "name": "node",
                  "nodeType": "VariableDeclaration",
                  "scope": 1564,
                  "src": "999:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1555,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "999:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1558,
                  "indexed": true,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 1564,
                  "src": "1021:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1557,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1021:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1560,
                  "indexed": true,
                  "name": "target",
                  "nodeType": "VariableDeclaration",
                  "scope": 1564,
                  "src": "1044:22:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1559,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1044:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1562,
                  "indexed": false,
                  "name": "isAuthorised",
                  "nodeType": "VariableDeclaration",
                  "scope": 1564,
                  "src": "1068:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1561,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1068:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "998:88:5"
            },
            "src": "972:115:5"
          },
          {
            "body": {
              "id": 1573,
              "nodeType": "Block",
              "src": "1122:27:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1569,
                      "name": "ens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1546,
                      "src": "1132:3:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ENS_$1271",
                        "typeString": "contract ENS"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1570,
                      "name": "_ens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1566,
                      "src": "1138:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ENS_$1271",
                        "typeString": "contract ENS"
                      }
                    },
                    "src": "1132:10:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ENS_$1271",
                      "typeString": "contract ENS"
                    }
                  },
                  "id": 1572,
                  "nodeType": "ExpressionStatement",
                  "src": "1132:10:5"
                }
              ]
            },
            "documentation": null,
            "id": 1574,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1567,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1566,
                  "name": "_ens",
                  "nodeType": "VariableDeclaration",
                  "scope": 1574,
                  "src": "1105:8:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ENS_$1271",
                    "typeString": "contract ENS"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1565,
                    "name": "ENS",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1271,
                    "src": "1105:3:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ENS_$1271",
                      "typeString": "contract ENS"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1104:10:5"
            },
            "returnParameters": {
              "id": 1568,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1122:0:5"
            },
            "scope": 1633,
            "src": "1093:56:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1602,
              "nodeType": "Block",
              "src": "1918:147:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1592,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1583,
                            "name": "authorisations",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1554,
                            "src": "1928:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$_$",
                              "typeString": "mapping(bytes32 => mapping(address => mapping(address => bool)))"
                            }
                          },
                          "id": 1588,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1584,
                            "name": "node",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1576,
                            "src": "1943:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1928:20:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(address => bool))"
                          }
                        },
                        "id": 1589,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1585,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3444,
                            "src": "1949:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1586,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1949:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1928:32:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1590,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1587,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1578,
                        "src": "1961:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1928:40:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1591,
                      "name": "isAuthorised",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1580,
                      "src": "1971:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1928:55:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1593,
                  "nodeType": "ExpressionStatement",
                  "src": "1928:55:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1595,
                        "name": "node",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1576,
                        "src": "2019:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1596,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3444,
                          "src": "2025:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1597,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2025:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1598,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1578,
                        "src": "2037:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1599,
                        "name": "isAuthorised",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1580,
                        "src": "2045:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1594,
                      "name": "AuthorisationChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1564,
                      "src": "1998:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (bytes32,address,address,bool)"
                      }
                    },
                    "id": 1600,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1998:60:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1601,
                  "nodeType": "EmitStatement",
                  "src": "1993:65:5"
                }
              ]
            },
            "documentation": "@dev Sets or clears an authorisation.\nAuthorisations are specific to the caller. Any account can set an authorisation\nfor any name, but the authorisation that is checked will be that of the\ncurrent owner of a name. Thus, transferring a name effectively clears any\nexisting authorisations, and new authorisations can be set in advance of\nan ownership transfer if desired.\n     * @param node The name to change the authorisation on.\n@param target The address that is to be authorised or deauthorised.\n@param isAuthorised True if the address should be authorised, or false if it should be deauthorised.",
            "id": 1603,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setAuthorisation",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1581,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1576,
                  "name": "node",
                  "nodeType": "VariableDeclaration",
                  "scope": 1603,
                  "src": "1860:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1575,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1860:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1578,
                  "name": "target",
                  "nodeType": "VariableDeclaration",
                  "scope": 1603,
                  "src": "1874:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1577,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1874:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1580,
                  "name": "isAuthorised",
                  "nodeType": "VariableDeclaration",
                  "scope": 1603,
                  "src": "1890:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1579,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1890:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1859:49:5"
            },
            "returnParameters": {
              "id": 1582,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1918:0:5"
            },
            "scope": 1633,
            "src": "1834:231:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1631,
              "nodeType": "Block",
              "src": "2135:127:5",
              "statements": [
                {
                  "assignments": [
                    1611
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1611,
                      "name": "owner",
                      "nodeType": "VariableDeclaration",
                      "scope": 1631,
                      "src": "2145:13:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1610,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2145:7:5",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1616,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1614,
                        "name": "node",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1605,
                        "src": "2171:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1612,
                        "name": "ens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1546,
                        "src": "2161:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ENS_$1271",
                          "typeString": "contract ENS"
                        }
                      },
                      "id": 1613,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "owner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1256,
                      "src": "2161:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes32) view external returns (address)"
                      }
                    },
                    "id": 1615,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2161:15:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2145:31:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1629,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 1620,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 1617,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1611,
                        "src": "2193:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1618,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3444,
                          "src": "2202:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1619,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2202:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "src": "2193:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1621,
                            "name": "authorisations",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1554,
                            "src": "2216:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$_$",
                              "typeString": "mapping(bytes32 => mapping(address => mapping(address => bool)))"
                            }
                          },
                          "id": 1623,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1622,
                            "name": "node",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1605,
                            "src": "2231:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2216:20:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(address => bool))"
                          }
                        },
                        "id": 1625,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1624,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1611,
                          "src": "2237:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2216:27:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1628,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1626,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3444,
                          "src": "2244:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1627,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2244:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2216:39:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2193:62:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1609,
                  "id": 1630,
                  "nodeType": "Return",
                  "src": "2186:69:5"
                }
              ]
            },
            "documentation": null,
            "id": 1632,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isAuthorised",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1606,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1605,
                  "name": "node",
                  "nodeType": "VariableDeclaration",
                  "scope": 1632,
                  "src": "2093:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1604,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2093:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2092:14:5"
            },
            "returnParameters": {
              "id": 1609,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1608,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1632,
                  "src": "2129:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1607,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2129:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2128:6:5"
            },
            "scope": 1633,
            "src": "2071:191:5",
            "stateMutability": "view",
            "superFunction": 2278,
            "visibility": "internal"
          }
        ],
        "scope": 1634,
        "src": "462:1802:5"
      }
    ],
    "src": "0:2265:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.11",
  "updatedAt": "2019-07-02T00:26:01.814Z",
  "devdoc": {
    "methods": {
      "ABI(bytes32,uint256)": {
        "params": {
          "contentTypes": "A bitwise OR of the ABI formats accepted by the caller.",
          "node": "The ENS node to query"
        },
        "return": "contentType The content type of the return valuedata The ABI data"
      },
      "addr(bytes32)": {
        "params": {
          "node": "The ENS node to query."
        },
        "return": "The associated address."
      },
      "clearDNSZone(bytes32)": {
        "params": {
          "node": "the namehash of the node for which to clear the zone"
        }
      },
      "contenthash(bytes32)": {
        "params": {
          "node": "The ENS node to query."
        },
        "return": "The associated contenthash."
      },
      "dnsRecord(bytes32,bytes32,uint16)": {
        "params": {
          "name": "the keccak-256 hash of the fully-qualified name for which to fetch the record",
          "node": "the namehash of the node for which to fetch the record",
          "resource": "the ID of the resource as per https://en.wikipedia.org/wiki/List_of_DNS_record_types"
        },
        "return": "the DNS record in wire format if present, otherwise empty"
      },
      "hasDNSRecords(bytes32,bytes32)": {
        "params": {
          "name": "the namehash of the node for which to check the records",
          "node": "the namehash of the node for which to check the records"
        }
      },
      "interfaceImplementer(bytes32,bytes4)": {
        "params": {
          "interfaceID": "The EIP 168 interface ID to check for.",
          "node": "The ENS node to query."
        },
        "return": "The address that implements this interface, or 0 if the interface is unsupported."
      },
      "name(bytes32)": {
        "params": {
          "node": "The ENS node to query."
        },
        "return": "The associated name."
      },
      "pubkey(bytes32)": {
        "params": {
          "node": "The ENS node to query"
        },
        "return": "x, y the X and Y coordinates of the curve point for the public key."
      },
      "setABI(bytes32,uint256,bytes)": {
        "params": {
          "contentType": "The content type of the ABI",
          "data": "The ABI data.",
          "node": "The node to update."
        }
      },
      "setAddr(bytes32,address)": {
        "params": {
          "addr": "The address to set.",
          "node": "The node to update."
        }
      },
      "setAuthorisation(bytes32,address,bool)": {
        "details": "Sets or clears an authorisation. Authorisations are specific to the caller. Any account can set an authorisation for any name, but the authorisation that is checked will be that of the current owner of a name. Thus, transferring a name effectively clears any existing authorisations, and new authorisations can be set in advance of an ownership transfer if desired.",
        "params": {
          "isAuthorised": "True if the address should be authorised, or false if it should be deauthorised.",
          "node": "The name to change the authorisation on.",
          "target": "The address that is to be authorised or deauthorised."
        }
      },
      "setContenthash(bytes32,bytes)": {
        "params": {
          "hash": "The contenthash to set",
          "node": "The node to update."
        }
      },
      "setDNSRecords(bytes32,bytes)": {
        "params": {
          "data": "the DNS wire format records to set",
          "node": "the namehash of the node for which to set the records"
        }
      },
      "setInterface(bytes32,bytes4,address)": {
        "params": {
          "implementer": "The address of a contract that implements this interface for this node.",
          "interfaceID": "The EIP 168 interface ID.",
          "node": "The node to update."
        }
      },
      "setName(bytes32,string)": {
        "params": {
          "name": "The name to set.",
          "node": "The node to update."
        }
      },
      "setPubkey(bytes32,bytes32,bytes32)": {
        "params": {
          "node": "The ENS node to query",
          "x": "the X coordinate of the curve point for the public key.",
          "y": "the Y coordinate of the curve point for the public key."
        }
      },
      "setText(bytes32,string,string)": {
        "params": {
          "key": "The key to set.",
          "node": "The node to update.",
          "value": "The text data value to set."
        }
      },
      "text(bytes32,string)": {
        "params": {
          "key": "The text data key to query.",
          "node": "The ENS node to query."
        },
        "return": "The associated text data."
      }
    }
  },
  "userdoc": {
    "methods": {
      "ABI(bytes32,uint256)": {
        "notice": "Returns the ABI associated with an ENS node. Defined in EIP205."
      },
      "addr(bytes32)": {
        "notice": "Returns the address associated with an ENS node."
      },
      "clearDNSZone(bytes32)": {
        "notice": "Clear all information for a DNS zone."
      },
      "contenthash(bytes32)": {
        "notice": "Returns the contenthash associated with an ENS node."
      },
      "dnsRecord(bytes32,bytes32,uint16)": {
        "notice": "Obtain a DNS record."
      },
      "hasDNSRecords(bytes32,bytes32)": {
        "notice": "Check if a given node has records."
      },
      "interfaceImplementer(bytes32,bytes4)": {
        "notice": "Returns the address of a contract that implements the specified interface for this name. If an implementer has not been set for this interfaceID and name, the resolver will query the contract at `addr()`. If `addr()` is set, a contract exists at that address, and that contract implements EIP168 and returns `true` for the specified interfaceID, its address will be returned."
      },
      "name(bytes32)": {
        "notice": "Returns the name associated with an ENS node, for reverse records. Defined in EIP181."
      },
      "pubkey(bytes32)": {
        "notice": "Returns the SECP256k1 public key associated with an ENS node. Defined in EIP 619."
      },
      "setABI(bytes32,uint256,bytes)": {
        "notice": "Sets the ABI associated with an ENS node. Nodes may have one ABI of each content type. To remove an ABI, set it to the empty string."
      },
      "setAddr(bytes32,address)": {
        "notice": "Sets the address associated with an ENS node. May only be called by the owner of that node in the ENS registry."
      },
      "setContenthash(bytes32,bytes)": {
        "notice": "Sets the contenthash associated with an ENS node. May only be called by the owner of that node in the ENS registry."
      },
      "setDNSRecords(bytes32,bytes)": {
        "notice": "Set one or more DNS records.  Records are supplied in wire-format. Records with the same node/name/resource must be supplied one after the other to ensure the data is updated correctly. For example, if the data was supplied:    a.example.com IN A 1.2.3.4    a.example.com IN A 5.6.7.8    www.example.com IN CNAME a.example.com. then this would store the two A records for a.example.com correctly as a single RRSET, however if the data was supplied:    a.example.com IN A 1.2.3.4    www.example.com IN CNAME a.example.com.    a.example.com IN A 5.6.7.8 then this would store the first A record, the CNAME, then the second A record which would overwrite the first."
      },
      "setInterface(bytes32,bytes4,address)": {
        "notice": "Sets an interface associated with a name. Setting the address to 0 restores the default behaviour of querying the contract at `addr()` for interface support."
      },
      "setName(bytes32,string)": {
        "notice": "Sets the name associated with an ENS node, for reverse records. May only be called by the owner of that node in the ENS registry."
      },
      "setPubkey(bytes32,bytes32,bytes32)": {
        "notice": "Sets the SECP256k1 public key associated with an ENS node."
      },
      "setText(bytes32,string,string)": {
        "notice": "Sets the text data associated with an ENS node and key. May only be called by the owner of that node in the ENS registry."
      },
      "text(bytes32,string)": {
        "notice": "Returns the text data associated with an ENS node and key."
      }
    },
    "notice": "A simple resolver anyone can use; only allows the owner of a node to set its address."
  }
}